{"file_contents":{"DEPLOYMENT_REG_RU.md":{"content":"# –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—é –Ω–∞ —Ä–µ–≥.—Ä—É\n\n## üìã –ü—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—ã–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è\n\n1. –•–æ—Å—Ç–∏–Ω–≥ —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π Node.js\n2. MySQL –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö (—É–∂–µ —Å–æ–∑–¥–∞–Ω–∞: u3105470_psyh)\n3. FTP –¥–æ—Å—Ç—É–ø (—É–∂–µ –µ—Å—Ç—å: u3105470_psyh_us)\n4. SSH –¥–æ—Å—Ç—É–ø (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ, –Ω–æ –∂–µ–ª–∞—Ç–µ–ª—å–Ω–æ)\n\n## üîß –®–∞–≥ 1: –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö\n\n### 1.1 –û—Ç–∫—Ä–æ–π—Ç–µ phpMyAdmin\n- –í–æ–π–¥–∏—Ç–µ –≤ –ø–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ä–µ–≥.—Ä—É\n- –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ —Ä–∞–∑–¥–µ–ª \"–ë–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö\"\n- –û—Ç–∫—Ä–æ–π—Ç–µ phpMyAdmin –¥–ª—è –±–∞–∑—ã `u3105470_psyh`\n\n### 1.2 –°–æ–∑–¥–∞–π—Ç–µ —Ç–∞–±–ª–∏—Ü—ã\n–í—ã–ø–æ–ª–Ω–∏—Ç–µ SQL —Å–∫—Ä–∏–ø—Ç –∏–∑ —Ñ–∞–π–ª–∞ `server-new/schema.sql`:\n\n1. –û—Ç–∫—Ä–æ–π—Ç–µ –≤–∫–ª–∞–¥–∫—É \"SQL\" –≤ phpMyAdmin\n2. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ `server-new/schema.sql`\n3. –í—Å—Ç–∞–≤—å—Ç–µ –∏ –Ω–∞–∂–º–∏—Ç–µ \"–í—ã–ø–æ–ª–Ω–∏—Ç—å\"\n\n## üìÅ –®–∞–≥ 2: –ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–∞–π–ª–æ–≤ —á–µ—Ä–µ–∑ FTP\n\n### 2.1 –ü–æ–¥–∫–ª—é—á–∏—Ç–µ—Å—å –∫ FTP\n```\n–•–æ—Å—Ç: ftp.–≤–∞—à_–¥–æ–º–µ–Ω.ru\n–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: u3105470_psyh_us\n–ü–∞—Ä–æ–ª—å: vC7mU1fG0waP8uE0\n–î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: /www/psyh.vakulskiy.team\n```\n\n### 2.2 –ó–∞–≥—Ä—É–∑–∏—Ç–µ —Ñ–∞–π–ª—ã\n–ó–∞–≥—Ä—É–∑–∏—Ç–µ —Å–ª–µ–¥—É—é—â–∏–µ –ø–∞–ø–∫–∏ –∏ —Ñ–∞–π–ª—ã:\n\n```\n/www/psyh.vakulskiy.team/\n‚îú‚îÄ‚îÄ server/          (–≤—Å–µ —Ñ–∞–π–ª—ã)\n‚îú‚îÄ‚îÄ public/          (–≤—Å–µ —Ñ–∞–π–ª—ã)\n‚îú‚îÄ‚îÄ package.json     (—Å–æ–∑–¥–∞–π—Ç–µ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ)\n‚îî‚îÄ‚îÄ .env             (—Å–æ–∑–¥–∞–π—Ç–µ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ)\n```\n\n### 2.3 –°–æ–∑–¥–∞–π—Ç–µ package.json\n–ù–∞ —Å–µ—Ä–≤–µ—Ä–µ —Å–æ–∑–¥–∞–π—Ç–µ —Ñ–∞–π–ª `package.json`:\n\n```json\n{\n  \"name\": \"psychplatform\",\n  \"version\": \"2.0.0\",\n  \"type\": \"module\",\n  \"scripts\": {\n    \"start\": \"node server/index.js\",\n    \"seed\": \"node server/seed.js\"\n  },\n  \"dependencies\": {\n    \"express\": \"^4.18.2\",\n    \"express-session\": \"^1.17.3\",\n    \"express-mysql-session\": \"^3.0.0\",\n    \"mysql2\": \"^3.6.5\",\n    \"bcrypt\": \"^5.1.1\"\n  }\n}\n```\n\n### 2.4 –°–æ–∑–¥–∞–π—Ç–µ .env —Ñ–∞–π–ª\n–°–æ–∑–¥–∞–π—Ç–µ —Ñ–∞–π–ª `.env` —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö:\n\n```env\nDB_HOST=localhost\nDB_USER=u3105470_psyh_user\nDB_PASSWORD=xR3iA0zO0qwV9cF4\nDB_NAME=u3105470_psyh\nSESSION_SECRET=–≤–∞—à_—Å–ª—É—á–∞–π–Ω—ã–π_—Å–µ–∫—Ä–µ—Ç–Ω—ã–π_–∫–ª—é—á_–º–∏–Ω–∏–º—É–º_32_—Å–∏–º–≤–æ–ª–∞\nPORT=5000\n```\n\n## üöÄ –®–∞–≥ 3: –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π\n\n### –ß–µ—Ä–µ–∑ SSH (—Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è)\n```bash\ncd /www/psyh.vakulskiy.team\nnpm install\n```\n\n### –ß–µ—Ä–µ–∑ –ø–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ä–µ–≥.—Ä—É\n–ï—Å–ª–∏ SSH –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω, –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É —Ä–µ–≥.—Ä—É –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ npm –ø–∞–∫–µ—Ç–æ–≤.\n\n## üå± –®–∞–≥ 4: –ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–µ–º–æ-–¥–∞–Ω–Ω—ã–º–∏\n\n### –ß–µ—Ä–µ–∑ SSH\n```bash\ncd /www/psyh.vakulskiy.team\nnpm run seed\n```\n\n### –ß–µ—Ä–µ–∑ phpMyAdmin (–∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–∞)\n–ï—Å–ª–∏ SSH –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω, –≤—Ä—É—á–Ω—É—é —Å–æ–∑–¥–∞–π—Ç–µ –¥–µ–º–æ-–¥–∞–Ω–Ω—ã–µ —á–µ—Ä–µ–∑ SQL:\n\n1. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ —Ö–µ—à–∏ –ø–∞—Ä–æ–ª–µ–π –∏–∑ `server-new/seed.js`\n2. –í—Å—Ç–∞–≤—å—Ç–µ SQL INSERT –∫–æ–º–∞–Ω–¥—ã –≤ phpMyAdmin\n\n**–î–µ–º–æ-–ø–∞—Ä–æ–ª–∏ (–¥–ª—è bcrypt):**\n```\nadmin123 -> $2b$10$...\npsychologist123 -> $2b$10$...\nclient123 -> $2b$10$...\n```\n\n## ‚ñ∂Ô∏è –®–∞–≥ 5: –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è\n\n### –í–∞—Ä–∏–∞–Ω—Ç A: –ß–µ—Ä–µ–∑ SSH\n```bash\ncd /www/psyh.vakulskiy.team\nnpm start\n```\n\n### –í–∞—Ä–∏–∞–Ω—Ç –ë: –ß–µ—Ä–µ–∑ PM2 (—Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –¥–ª—è –ø—Ä–æ–¥–∞–∫—à–µ–Ω–∞)\n```bash\nnpm install -g pm2\npm2 start server-new/index.js --name psychplatform\npm2 save\npm2 startup\n```\n\n### –í–∞—Ä–∏–∞–Ω—Ç –í: –ß–µ—Ä–µ–∑ –ø–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ä–µ–≥.—Ä—É\n–ù–∞—Å—Ç—Ä–æ–π—Ç–µ –∞–≤—Ç–æ–∑–∞–ø—É—Å–∫ Node.js –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –≤ –ø–∞–Ω–µ–ª–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è:\n- –ü—É—Ç—å –∫ —Ñ–∞–π–ª—É: `server/index.js`\n- –ü–æ—Ä—Ç: `5000`\n\n## üîç –®–∞–≥ 6: –ü—Ä–æ–≤–µ—Ä–∫–∞\n\n1. –û—Ç–∫—Ä–æ–π—Ç–µ –±—Ä–∞—É–∑–µ—Ä –∏ –ø–µ—Ä–µ–π–¥–∏—Ç–µ –Ω–∞ `http://psyh.vakulskiy.team`\n2. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç—Å—è –≥–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ —Å –ø–æ–∏—Å–∫–æ–º –ø—Å–∏—Ö–æ–ª–æ–≥–æ–≤\n3. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –≤–æ–π—Ç–∏ —Å –¥–µ–º–æ-–∞–∫–∫–∞—É–Ω—Ç–æ–º:\n   - Email: `admin@psychplatform.com`\n   - –ü–∞—Ä–æ–ª—å: `admin123`\n\n## ‚öôÔ∏è –®–∞–≥ 7: –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –≤–µ–±-—Å–µ—Ä–≤–µ—Ä–∞\n\n### Nginx –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è (–µ—Å–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è)\n```nginx\nserver {\n    listen 80;\n    server_name psyh.vakulskiy.team;\n\n    location / {\n        proxy_pass http://localhost:5000;\n        proxy_http_version 1.1;\n        proxy_set_header Upgrade $http_upgrade;\n        proxy_set_header Connection 'upgrade';\n        proxy_set_header Host $host;\n        proxy_cache_bypass $http_upgrade;\n    }\n}\n```\n\n### Apache .htaccess (–µ—Å–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è)\n```apache\nRewriteEngine On\nRewriteCond %{REQUEST_FILENAME} !-f\nRewriteCond %{REQUEST_FILENAME} !-d\nRewriteRule ^(.*)$ http://localhost:5000/$1 [P,L]\n```\n\n## üîê –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å\n\n### –û–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è –ø—Ä–æ–¥–∞–∫—à–µ–Ω–∞:\n\n1. **–ò–∑–º–µ–Ω–∏—Ç–µ SESSION_SECRET** –≤ `.env` –Ω–∞ —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –∫–ª—é—á\n2. **–í–∫–ª—é—á–∏—Ç–µ HTTPS** —á–µ—Ä–µ–∑ –ø–∞–Ω–µ–ª—å —Ä–µ–≥.—Ä—É (SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç)\n3. **–û–±–Ω–æ–≤–∏—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ cookie** –≤ `server-new/index.js`:\n   ```javascript\n   cookie: {\n     secure: true,  // –¢–æ–ª—å–∫–æ HTTPS\n     httpOnly: true,\n     sameSite: 'strict'\n   }\n   ```\n\n4. **–£–¥–∞–ª–∏—Ç–µ –¥–µ–º–æ-–∞–∫–∫–∞—É–Ω—Ç—ã** –ø–æ—Å–ª–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è\n5. **–ù–∞—Å—Ç—Ä–æ–π—Ç–µ firewall** –¥–ª—è MySQL (—Ç–æ–ª—å–∫–æ localhost)\n\n## üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è\n\n–ü—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –∫–æ–¥–∞:\n\n```bash\ncd /www/psyh.vakulskiy.team\ngit pull  # –µ—Å–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç–µ git\npm2 restart psychplatform  # –µ—Å–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç–µ pm2\n# –∏–ª–∏\nnpm start  # –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ –≤—Ä—É—á–Ω—É—é\n```\n\n## üìä –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥\n\n### –ü—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤\n```bash\npm2 logs psychplatform  # –µ—Å–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è pm2\n# –∏–ª–∏\ntail -f /path/to/logs/node.log\n```\n\n### –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞\n```bash\npm2 status  # –µ—Å–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è pm2\n```\n\n## ‚ùó –†–µ—à–µ–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º\n\n### –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –Ω–µ –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è\n1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏: `pm2 logs` –∏–ª–∏ `tail -f logs/error.log`\n2. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ MySQL: `mysql -u u3105470_psyh_user -p`\n3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∞ –Ω–∞ —Ñ–∞–π–ª—ã: `chmod -R 755 /www/psyh.vakulskiy.team`\n\n### –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–µ –ø–æ–¥–∫–ª—é—á–∞–µ—Ç—Å—è\n1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ credentials –≤ `.env`\n2. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ MySQL —Å–µ—Ä–≤–∏—Å –∑–∞–ø—É—â–µ–Ω\n3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ firewall –Ω–∞—Å—Ç—Ä–æ–π–∫–∏\n\n### –°—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ñ–∞–π–ª—ã –Ω–µ –æ—Ç–¥–∞—é—Ç—Å—è\n1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—É—Ç—å –∫ `public/` –≤ `server-new/index.js`\n2. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ –ø–∞–ø–∫–µ `public/`\n\n## üìû –ü–æ–¥–¥–µ—Ä–∂–∫–∞\n\n–ï—Å–ª–∏ –≤–æ–∑–Ω–∏–∫–ª–∏ –ø—Ä–æ–±–ª–µ–º—ã:\n1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è\n2. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ –≤–µ–±-—Å–µ—Ä–≤–µ—Ä–∞ (Nginx/Apache)\n3. –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É —Ä–µ–≥.—Ä—É –¥–ª—è –≤–æ–ø—Ä–æ—Å–æ–≤ –ø–æ —Ö–æ—Å—Ç–∏–Ω–≥—É\n\n## ‚úÖ –ß–µ–∫-–ª–∏—Å—Ç —Ñ–∏–Ω–∞–ª—å–Ω–æ–≥–æ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è\n\n- [ ] MySQL –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —Å–æ–∑–¥–∞–Ω–∞\n- [ ] –¢–∞–±–ª–∏—Ü—ã —Å–æ–∑–¥–∞–Ω—ã —á–µ—Ä–µ–∑ schema.sql\n- [ ] –§–∞–π–ª—ã –∑–∞–≥—Ä—É–∂–µ–Ω—ã —á–µ—Ä–µ–∑ FTP\n- [ ] package.json —Å–æ–∑–¥–∞–Ω\n- [ ] .env —Ñ–∞–π–ª –Ω–∞—Å—Ç—Ä–æ–µ–Ω\n- [ ] npm install –≤—ã–ø–æ–ª–Ω–µ–Ω\n- [ ] –î–µ–º–æ-–¥–∞–Ω–Ω—ã–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã (seed.js)\n- [ ] –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–ø—É—â–µ–Ω–æ (npm start / pm2)\n- [ ] –°–∞–π—Ç –¥–æ—Å—Ç—É–ø–µ–Ω –≤ –±—Ä–∞—É–∑–µ—Ä–µ\n- [ ] –í—Ö–æ–¥ —Å –¥–µ–º–æ-–∞–∫–∫–∞—É–Ω—Ç–æ–º —Ä–∞–±–æ—Ç–∞–µ—Ç\n- [ ] HTTPS –Ω–∞—Å—Ç—Ä–æ–µ–Ω (SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç)\n- [ ] SESSION_SECRET –∏–∑–º–µ–Ω–µ–Ω\n- [ ] –î–µ–º–æ-–∞–∫–∫–∞—É–Ω—Ç—ã —É–¥–∞–ª–µ–Ω—ã (–ø–æ—Å–ª–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è)\n\n## üéâ –ì–æ—Ç–æ–≤–æ!\n\n–í–∞—à–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Ç–µ–ø–µ—Ä—å —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–∞ `http://psyh.vakulskiy.team`!\n","size_bytes":8155},"–ó–ê–ü–£–°–ö_–°–ï–†–í–ï–†–ê.md":{"content":"# üöÄ –ö–∞–∫ –∑–∞–ø—É—Å—Ç–∏—Ç—å –Ω–æ–≤—ã–π —Å–µ—Ä–≤–µ—Ä\n\n## ‚ö†Ô∏è –í–∞–∂–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è\n\n–°—Ç–∞—Ä—ã–π React —Å–µ—Ä–≤–µ—Ä –±—ã–ª —É–¥–∞–ª–µ–Ω. –¢–µ–ø–µ—Ä—å —É –≤–∞—Å **–Ω–æ–≤–∞—è –≤–µ—Ä—Å–∏—è** –Ω–∞ —á–∏—Å—Ç–æ–º JavaScript + MySQL.\n\n## üìã –í–∞—Ä–∏–∞–Ω—Ç—ã –∑–∞–ø—É—Å–∫–∞\n\n### ‚ùå –ù–ï —Ä–∞–±–æ—Ç–∞–µ—Ç –±–æ–ª—å—à–µ:\n```bash\nnpm run dev  # –≠—Ç–æ –∑–∞–ø—É—Å–∫–∞–ª–æ —Å—Ç–∞—Ä—ã–π React —Å–µ—Ä–≤–µ—Ä\n```\n\n### ‚úÖ –†–∞–±–æ—Ç–∞–µ—Ç —Å–µ–π—á–∞—Å:\n\n#### –í–∞—Ä–∏–∞–Ω—Ç 1: –ù–∞–ø—Ä—è–º—É—é —á–µ—Ä–µ–∑ Node.js\n```bash\nnode server/index.js\n```\n\n#### –í–∞—Ä–∏–∞–Ω—Ç 2: –ß–µ—Ä–µ–∑ npm (—Ç–µ –∂–µ —Å–∞–º—ã–µ –∫–æ–º–∞–Ω–¥—ã)\n```bash\nnpm start     # –ó–∞–ø—É—Å–∫–∞–µ—Ç node server/index.js\nnpm run dev   # –¢–∞–∫–∂–µ –∑–∞–ø—É—Å–∫–∞–µ—Ç node server/index.js\n```\n\n#### –í–∞—Ä–∏–∞–Ω—Ç 3: –ó–∞–ø–æ–ª–Ω–∏—Ç—å –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö –¥–µ–º–æ-–¥–∞–Ω–Ω—ã–º–∏\n```bash\ncd server\nnode seed.js\n```\n\n## ‚ö†Ô∏è –¢—Ä–µ–±–æ–≤–∞–Ω–∏—è\n\n### MySQL –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–∞!\n\n–ù–æ–≤—ã–π —Å–µ—Ä–≤–µ—Ä **–ù–ï –ó–ê–ü–£–°–¢–ò–¢–°–Ø** –±–µ–∑ MySQL, –ø–æ—Ç–æ–º—É —á—Ç–æ:\n- Replit –Ω–µ –∏–º–µ–µ—Ç MySQL –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é\n- –°–µ—Ä–≤–µ—Ä –∏—Å–ø–æ–ª—å–∑—É–µ—Ç MySQL –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö\n- –°—Ç–∞—Ä–∞—è PostgreSQL –±—ã–ª–∞ —É–¥–∞–ª–µ–Ω–∞\n\n### –ì–¥–µ –∑–∞–ø—É—Å–∫–∞—Ç—å?\n\n1. **–ù–∞ —Ä–µ–≥.—Ä—É** (—Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è) - —Å–º. `DEPLOYMENT_REG_RU.md`\n2. **–õ–æ–∫–∞–ª—å–Ω–æ** —Å —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–º MySQL - —Å–º. `QUICK_START.md`\n3. **–ù–∞ –¥—Ä—É–≥–æ–º —Ö–æ—Å—Ç–∏–Ω–≥–µ** —Å MySQL\n\n## üîß –ë—ã—Å—Ç—Ä–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è\n\n–ï—Å–ª–∏ —É –≤–∞—Å –µ—Å—Ç—å MySQL –ª–æ–∫–∞–ª—å–Ω–æ:\n\n```bash\n# 1. –°–æ–∑–¥–∞–π—Ç–µ .env —Ñ–∞–π–ª\ncp .env.example .env\n\n# 2. –û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ .env —Å –≤–∞—à–∏–º–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏ MySQL\nnano .env\n\n# 3. –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–π—Ç–µ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö\ncd server && node seed.js\n\n# 4. –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–µ—Ä–≤–µ—Ä\nnode index.js\n```\n\n## üìö –ü–æ–ª–Ω–∞—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è\n\n- **START_HERE.md** - –ù–∞—á–Ω–∏—Ç–µ —Å —ç—Ç–æ–≥–æ —Ñ–∞–π–ª–∞\n- **QUICK_START.md** - –ó–∞–ø—É—Å–∫ –∑–∞ 5 –º–∏–Ω—É—Ç\n- **DEPLOYMENT_REG_RU.md** - –î–µ–ø–ª–æ–π –Ω–∞ —Ä–µ–≥.—Ä—É\n- **README_NEW.md** - –ü–æ–ª–Ω–∞—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è\n\n## üéâ –ì–æ—Ç–æ–≤–æ!\n\n–ü—Ä–æ–µ–∫—Ç –ø–æ–ª–Ω–æ—Å—Ç—å—é –æ—á–∏—â–µ–Ω –æ—Ç —Å—Ç–∞—Ä—ã—Ö —Ñ–∞–π–ª–æ–≤ –∏ –≥–æ—Ç–æ–≤ –∫ –¥–µ–ø–ª–æ—é –Ω–∞ —Ä–µ–≥.—Ä—É —Å MySQL!\n","size_bytes":2371},"server-new/storage.js":{"content":"// MySQL Storage Implementation\nconst { query, queryOne } = require('./db');\nconst { randomUUID } = require('crypto');\n\nclass MySQLStorage {\n  // ========== USER METHODS ==========\n  \n  async getUser(id) {\n    return await queryOne(\n      'SELECT * FROM users WHERE id = ?',\n      [id]\n    );\n  }\n\n  async getUserByEmail(email) {\n    return await queryOne(\n      'SELECT * FROM users WHERE email = ?',\n      [email]\n    );\n  }\n\n  async createUser(insertUser) {\n    const id = randomUUID();\n    const user = {\n      id,\n      email: insertUser.email,\n      password: insertUser.password,\n      role: insertUser.role,\n      first_name: insertUser.firstName,\n      last_name: insertUser.lastName,\n      avatar: insertUser.avatar || null,\n      is_verified: false,\n      is_frozen: false\n    };\n\n    await query(\n      `INSERT INTO users (id, email, password, role, first_name, last_name, avatar, is_verified, is_frozen)\n       VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)`,\n      [user.id, user.email, user.password, user.role, user.first_name, user.last_name, user.avatar, user.is_verified, user.is_frozen]\n    );\n\n    return this.getUser(id);\n  }\n\n  async updateUser(id, updates) {\n    const fields = [];\n    const values = [];\n    \n    if (updates.firstName !== undefined) {\n      fields.push('first_name = ?');\n      values.push(updates.firstName);\n    }\n    if (updates.lastName !== undefined) {\n      fields.push('last_name = ?');\n      values.push(updates.lastName);\n    }\n    if (updates.avatar !== undefined) {\n      fields.push('avatar = ?');\n      values.push(updates.avatar);\n    }\n    if (updates.isVerified !== undefined) {\n      fields.push('is_verified = ?');\n      values.push(updates.isVerified);\n    }\n    if (updates.isFrozen !== undefined) {\n      fields.push('is_frozen = ?');\n      values.push(updates.isFrozen);\n    }\n    \n    if (fields.length === 0) return this.getUser(id);\n    \n    values.push(id);\n    await query(\n      `UPDATE users SET ${fields.join(', ')} WHERE id = ?`,\n      values\n    );\n    \n    return this.getUser(id);\n  }\n\n  async deleteUser(id) {\n    const result = await query('DELETE FROM users WHERE id = ?', [id]);\n    return result.affectedRows > 0;\n  }\n\n  async getAllUsers() {\n    return await query('SELECT * FROM users ORDER BY created_at DESC');\n  }\n\n  // ========== PSYCHOLOGIST METHODS ==========\n\n  async getPsychologist(id) {\n    const psych = await queryOne(\n      'SELECT * FROM psychologists WHERE id = ?',\n      [id]\n    );\n    \n    if (!psych) return null;\n    \n    // Parse JSON fields\n    if (psych.certifications) {\n      psych.certifications = JSON.parse(psych.certifications);\n    }\n    if (psych.formats) {\n      psych.formats = JSON.parse(psych.formats);\n    }\n    \n    return psych;\n  }\n\n  async getPsychologistByUserId(userId) {\n    const psych = await queryOne(\n      'SELECT * FROM psychologists WHERE user_id = ?',\n      [userId]\n    );\n    \n    if (!psych) return null;\n    \n    // Parse JSON fields\n    if (psych.certifications) {\n      psych.certifications = JSON.parse(psych.certifications);\n    }\n    if (psych.formats) {\n      psych.formats = JSON.parse(psych.formats);\n    }\n    \n    return psych;\n  }\n\n  async createPsychologist(insertPsychologist) {\n    const id = randomUUID();\n    \n    await query(\n      `INSERT INTO psychologists \n       (id, user_id, specialization, experience, education, certifications, description, price, formats, is_approved, rating, total_reviews)\n       VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)`,\n      [\n        id,\n        insertPsychologist.userId,\n        insertPsychologist.specialization,\n        insertPsychologist.experience,\n        insertPsychologist.education,\n        JSON.stringify(insertPsychologist.certifications || []),\n        insertPsychologist.description,\n        insertPsychologist.price,\n        JSON.stringify(insertPsychologist.formats || []),\n        false,\n        0.00,\n        0\n      ]\n    );\n\n    return this.getPsychologist(id);\n  }\n\n  async updatePsychologist(id, updates) {\n    const fields = [];\n    const values = [];\n    \n    if (updates.specialization !== undefined) {\n      fields.push('specialization = ?');\n      values.push(updates.specialization);\n    }\n    if (updates.experience !== undefined) {\n      fields.push('experience = ?');\n      values.push(updates.experience);\n    }\n    if (updates.education !== undefined) {\n      fields.push('education = ?');\n      values.push(updates.education);\n    }\n    if (updates.certifications !== undefined) {\n      fields.push('certifications = ?');\n      values.push(JSON.stringify(updates.certifications));\n    }\n    if (updates.description !== undefined) {\n      fields.push('description = ?');\n      values.push(updates.description);\n    }\n    if (updates.price !== undefined) {\n      fields.push('price = ?');\n      values.push(updates.price);\n    }\n    if (updates.formats !== undefined) {\n      fields.push('formats = ?');\n      values.push(JSON.stringify(updates.formats));\n    }\n    if (updates.isApproved !== undefined) {\n      fields.push('is_approved = ?');\n      values.push(updates.isApproved);\n    }\n    if (updates.rating !== undefined) {\n      fields.push('rating = ?');\n      values.push(updates.rating);\n    }\n    if (updates.totalReviews !== undefined) {\n      fields.push('total_reviews = ?');\n      values.push(updates.totalReviews);\n    }\n    \n    if (fields.length === 0) return this.getPsychologist(id);\n    \n    values.push(id);\n    await query(\n      `UPDATE psychologists SET ${fields.join(', ')} WHERE id = ?`,\n      values\n    );\n    \n    return this.getPsychologist(id);\n  }\n\n  async searchPsychologists(filters = {}) {\n    let sql = `\n      SELECT \n        p.*,\n        u.id as user_id,\n        u.email as user_email,\n        u.first_name as user_first_name,\n        u.last_name as user_last_name,\n        u.avatar as user_avatar\n      FROM psychologists p\n      JOIN users u ON p.user_id = u.id\n      WHERE 1=1\n    `;\n    const params = [];\n\n    if (filters.isApproved !== undefined) {\n      sql += ' AND p.is_approved = ?';\n      params.push(filters.isApproved);\n    }\n\n    if (filters.specialization) {\n      sql += ' AND p.specialization LIKE ?';\n      params.push(`%${filters.specialization}%`);\n    }\n\n    if (filters.minPrice !== undefined) {\n      sql += ' AND p.price >= ?';\n      params.push(filters.minPrice);\n    }\n\n    if (filters.maxPrice !== undefined) {\n      sql += ' AND p.price <= ?';\n      params.push(filters.maxPrice);\n    }\n\n    sql += ' ORDER BY p.rating DESC, p.total_reviews DESC';\n\n    const rows = await query(sql, params);\n    \n    return rows.map(row => ({\n      id: row.id,\n      userId: row.user_id,\n      specialization: row.specialization,\n      experience: row.experience,\n      education: row.education,\n      certifications: row.certifications ? JSON.parse(row.certifications) : [],\n      description: row.description,\n      price: row.price,\n      formats: row.formats ? JSON.parse(row.formats) : [],\n      isApproved: Boolean(row.is_approved),\n      rating: row.rating,\n      totalReviews: row.total_reviews,\n      user: {\n        id: row.user_id,\n        email: row.user_email,\n        firstName: row.user_first_name,\n        lastName: row.user_last_name,\n        avatar: row.user_avatar,\n        role: 'psychologist'\n      }\n    }));\n  }\n\n  async getPendingPsychologists() {\n    return this.searchPsychologists({ isApproved: false });\n  }\n\n  async approvePsychologist(psychologistId) {\n    await query(\n      'UPDATE psychologists SET is_approved = TRUE WHERE id = ?',\n      [psychologistId]\n    );\n  }\n\n  async rejectPsychologist(psychologistId) {\n    // For now, just delete the psychologist\n    await query('DELETE FROM psychologists WHERE id = ?', [psychologistId]);\n  }\n\n  // ========== APPOINTMENT METHODS ==========\n\n  async getAppointment(id) {\n    return await queryOne(\n      'SELECT * FROM appointments WHERE id = ?',\n      [id]\n    );\n  }\n\n  async createAppointment(insertAppointment) {\n    const id = randomUUID();\n    \n    await query(\n      `INSERT INTO appointments \n       (id, client_id, psychologist_id, date_time, duration, format, status, price, notes)\n       VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)`,\n      [\n        id,\n        insertAppointment.clientId,\n        insertAppointment.psychologistId,\n        insertAppointment.dateTime,\n        insertAppointment.duration || 50,\n        insertAppointment.format,\n        'scheduled',\n        insertAppointment.price,\n        insertAppointment.notes || null\n      ]\n    );\n\n    return this.getAppointment(id);\n  }\n\n  async updateAppointment(id, updates) {\n    const fields = [];\n    const values = [];\n    \n    if (updates.status !== undefined) {\n      fields.push('status = ?');\n      values.push(updates.status);\n    }\n    if (updates.notes !== undefined) {\n      fields.push('notes = ?');\n      values.push(updates.notes);\n    }\n    if (updates.dateTime !== undefined) {\n      fields.push('date_time = ?');\n      values.push(updates.dateTime);\n    }\n    \n    if (fields.length === 0) return this.getAppointment(id);\n    \n    values.push(id);\n    await query(\n      `UPDATE appointments SET ${fields.join(', ')} WHERE id = ?`,\n      values\n    );\n    \n    return this.getAppointment(id);\n  }\n\n  async getAppointmentsByClient(clientId) {\n    const sql = `\n      SELECT \n        a.*,\n        c.email as client_email,\n        c.first_name as client_first_name,\n        c.last_name as client_last_name,\n        c.avatar as client_avatar,\n        p.id as psych_id,\n        p.specialization as psych_specialization,\n        p.experience as psych_experience,\n        p.rating as psych_rating,\n        pu.id as psych_user_id,\n        pu.email as psych_user_email,\n        pu.first_name as psych_user_first_name,\n        pu.last_name as psych_user_last_name,\n        pu.avatar as psych_user_avatar\n      FROM appointments a\n      JOIN users c ON a.client_id = c.id\n      JOIN psychologists p ON a.psychologist_id = p.id\n      JOIN users pu ON p.user_id = pu.id\n      WHERE a.client_id = ?\n      ORDER BY a.date_time DESC\n    `;\n    \n    const rows = await query(sql, [clientId]);\n    return this.formatAppointmentRows(rows);\n  }\n\n  async getAppointmentsByPsychologist(psychologistId) {\n    const sql = `\n      SELECT \n        a.*,\n        c.email as client_email,\n        c.first_name as client_first_name,\n        c.last_name as client_last_name,\n        c.avatar as client_avatar,\n        p.id as psych_id,\n        p.specialization as psych_specialization,\n        p.experience as psych_experience,\n        p.rating as psych_rating,\n        pu.id as psych_user_id,\n        pu.email as psych_user_email,\n        pu.first_name as psych_user_first_name,\n        pu.last_name as psych_user_last_name,\n        pu.avatar as psych_user_avatar\n      FROM appointments a\n      JOIN users c ON a.client_id = c.id\n      JOIN psychologists p ON a.psychologist_id = p.id\n      JOIN users pu ON p.user_id = pu.id\n      WHERE a.psychologist_id = ?\n      ORDER BY a.date_time DESC\n    `;\n    \n    const rows = await query(sql, [psychologistId]);\n    return this.formatAppointmentRows(rows);\n  }\n\n  formatAppointmentRows(rows) {\n    return rows.map(row => ({\n      id: row.id,\n      clientId: row.client_id,\n      psychologistId: row.psychologist_id,\n      dateTime: row.date_time,\n      duration: row.duration,\n      format: row.format,\n      status: row.status,\n      price: row.price,\n      notes: row.notes,\n      createdAt: row.created_at,\n      client: {\n        id: row.client_id,\n        email: row.client_email,\n        firstName: row.client_first_name,\n        lastName: row.client_last_name,\n        avatar: row.client_avatar,\n        role: 'client'\n      },\n      psychologist: {\n        id: row.psych_id,\n        specialization: row.psych_specialization,\n        experience: row.psych_experience,\n        rating: row.psych_rating,\n        user: {\n          id: row.psych_user_id,\n          email: row.psych_user_email,\n          firstName: row.psych_user_first_name,\n          lastName: row.psych_user_last_name,\n          avatar: row.psych_user_avatar,\n          role: 'psychologist'\n        }\n      }\n    }));\n  }\n\n  // ========== REVIEW METHODS ==========\n\n  async createReview(insertReview) {\n    const id = randomUUID();\n    \n    await query(\n      `INSERT INTO reviews \n       (id, appointment_id, client_id, psychologist_id, rating, comment, is_moderated)\n       VALUES (?, ?, ?, ?, ?, ?, ?)`,\n      [\n        id,\n        insertReview.appointmentId,\n        insertReview.clientId,\n        insertReview.psychologistId,\n        insertReview.rating,\n        insertReview.comment || null,\n        false\n      ]\n    );\n\n    // Update psychologist rating\n    await this.updatePsychologistRating(insertReview.psychologistId);\n\n    return await queryOne('SELECT * FROM reviews WHERE id = ?', [id]);\n  }\n\n  async updatePsychologistRating(psychologistId) {\n    const stats = await queryOne(\n      `SELECT AVG(rating) as avg_rating, COUNT(*) as count \n       FROM reviews \n       WHERE psychologist_id = ?`,\n      [psychologistId]\n    );\n\n    if (stats && stats.count > 0) {\n      await query(\n        'UPDATE psychologists SET rating = ?, total_reviews = ? WHERE id = ?',\n        [parseFloat(stats.avg_rating).toFixed(2), stats.count, psychologistId]\n      );\n    }\n  }\n\n  async getReviewsByPsychologist(psychologistId) {\n    const sql = `\n      SELECT \n        r.*,\n        c.email as client_email,\n        c.first_name as client_first_name,\n        c.last_name as client_last_name,\n        c.avatar as client_avatar,\n        p.specialization as psych_specialization,\n        pu.first_name as psych_first_name,\n        pu.last_name as psych_last_name\n      FROM reviews r\n      JOIN users c ON r.client_id = c.id\n      JOIN psychologists p ON r.psychologist_id = p.id\n      JOIN users pu ON p.user_id = pu.id\n      WHERE r.psychologist_id = ?\n      ORDER BY r.created_at DESC\n    `;\n    \n    const rows = await query(sql, [psychologistId]);\n    return rows.map(row => ({\n      id: row.id,\n      appointmentId: row.appointment_id,\n      clientId: row.client_id,\n      psychologistId: row.psychologist_id,\n      rating: row.rating,\n      comment: row.comment,\n      isModerated: Boolean(row.is_moderated),\n      createdAt: row.created_at,\n      client: {\n        id: row.client_id,\n        email: row.client_email,\n        firstName: row.client_first_name,\n        lastName: row.client_last_name,\n        avatar: row.client_avatar,\n        role: 'client'\n      },\n      psychologist: {\n        id: row.psychologist_id,\n        specialization: row.psych_specialization,\n        user: {\n          firstName: row.psych_first_name,\n          lastName: row.psych_last_name,\n          role: 'psychologist'\n        }\n      }\n    }));\n  }\n\n  // ========== MESSAGE METHODS ==========\n\n  async createMessage(insertMessage) {\n    const id = randomUUID();\n    \n    await query(\n      `INSERT INTO messages (id, sender_id, receiver_id, content, is_read)\n       VALUES (?, ?, ?, ?, ?)`,\n      [id, insertMessage.senderId, insertMessage.receiverId, insertMessage.content, false]\n    );\n\n    return await queryOne('SELECT * FROM messages WHERE id = ?', [id]);\n  }\n\n  async getMessagesBetween(user1Id, user2Id) {\n    return await query(\n      `SELECT * FROM messages \n       WHERE (sender_id = ? AND receiver_id = ?) \n          OR (sender_id = ? AND receiver_id = ?)\n       ORDER BY created_at ASC`,\n      [user1Id, user2Id, user2Id, user1Id]\n    );\n  }\n\n  // ========== AVAILABILITY METHODS ==========\n\n  async createAvailability(insertAvailability) {\n    const id = randomUUID();\n    \n    await query(\n      `INSERT INTO availability (id, psychologist_id, day_of_week, start_time, end_time, is_active)\n       VALUES (?, ?, ?, ?, ?, ?)`,\n      [\n        id,\n        insertAvailability.psychologistId,\n        insertAvailability.dayOfWeek,\n        insertAvailability.startTime,\n        insertAvailability.endTime,\n        true\n      ]\n    );\n\n    return await queryOne('SELECT * FROM availability WHERE id = ?', [id]);\n  }\n\n  async getAvailabilityByPsychologist(psychologistId) {\n    return await query(\n      'SELECT * FROM availability WHERE psychologist_id = ? AND is_active = TRUE ORDER BY day_of_week, start_time',\n      [psychologistId]\n    );\n  }\n}\n\nmodule.exports = { MySQLStorage };\n","size_bytes":16284},"public/css/styles.css":{"content":"/* psytalk.pro - EgoDrive Inspired Design System */\n\n/* ============================================\n   CSS Variables - Purple theme\n   ============================================ */\n:root {\n  /* shadcn/ui HSL Color System - Purple Theme */\n  --background: hsl(0 0% 100%);\n  --foreground: hsl(0 0% 10%);\n  --card: hsl(0 0% 100%);\n  --card-foreground: hsl(0 0% 10%);\n  --popover: hsl(0 0% 100%);\n  --popover-foreground: hsl(0 0% 10%);\n  --primary: hsl(258 80% 57%);\n  --primary-foreground: hsl(0 0% 100%);\n  --secondary: hsl(270 95% 95%);\n  --secondary-foreground: hsl(258 80% 57%);\n  --muted: hsl(270 30% 96%);\n  --muted-foreground: hsl(0 0% 45%);\n  --accent: hsl(258 80% 57%);\n  --accent-foreground: hsl(0 0% 100%);\n  --destructive: hsl(0 84% 60%);\n  --destructive-foreground: hsl(0 0% 100%);\n  --border: hsl(270 20% 90%);\n  --input: hsl(270 20% 95%);\n  --ring: hsl(258 80% 57%);\n  --radius: 0.75rem;\n  \n  /* Custom brand colors - Purple theme */\n  --primary-custom: #7C3AED;\n  --secondary-custom: #F3E8FF;\n  --accent-custom: #8B5CF6;\n  --text-custom: #1A1A1A;\n  \n  /* Spacing */\n  --spacing-xs: 0.25rem;\n  --spacing-sm: 0.5rem;\n  --spacing-md: 1rem;\n  --spacing-lg: 1.5rem;\n  --spacing-xl: 2rem;\n  --spacing-2xl: 3rem;\n  \n  /* Shadows (from shadcn/ui) */\n  --shadow-sm: 0 1px 2px 0 rgb(0 0 0 / 0.05);\n  --shadow: 0 1px 3px 0 rgb(0 0 0 / 0.1), 0 1px 2px -1px rgb(0 0 0 / 0.1);\n  --shadow-md: 0 4px 6px -1px rgb(0 0 0 / 0.1), 0 2px 4px -2px rgb(0 0 0 / 0.1);\n  --shadow-lg: 0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1);\n  --shadow-xl: 0 20px 25px -5px rgb(0 0 0 / 0.1), 0 8px 10px -6px rgb(0 0 0 / 0.1);\n}\n\n/* ============================================\n   Reset & Base Styles\n   ============================================ */\n* {\n  box-sizing: border-box;\n  margin: 0;\n  padding: 0;\n  border: 0 solid hsl(var(--border));\n}\n\nhtml {\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\nbody {\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Inter', 'Roboto', sans-serif;\n  font-size: 1rem;\n  line-height: 1.5;\n  color: hsl(var(--foreground));\n  background-color: hsl(var(--background));\n  min-height: 100vh;\n  padding-top: 70px;\n}\n\n/* ============================================\n   Typography\n   ============================================ */\nh1, h2, h3, h4, h5, h6 {\n  font-weight: 600;\n  line-height: 1.2;\n  margin-bottom: var(--spacing-md);\n  color: hsl(var(--foreground));\n}\n\nh1 { font-size: 2.25rem; }\nh2 { font-size: 1.875rem; }\nh3 { font-size: 1.5rem; }\nh4 { font-size: 1.25rem; }\nh5 { font-size: 1.125rem; }\nh6 { font-size: 1rem; }\n\np {\n  margin-bottom: var(--spacing-md);\n}\n\n/* ============================================\n   Layout Utilities\n   ============================================ */\n.container {\n  width: 100%;\n  max-width: 1280px;\n  margin: 0 auto;\n  padding: 0 var(--spacing-lg);\n}\n\n.container-fluid {\n  width: 100%;\n  padding: 0 var(--spacing-lg);\n}\n\n.section {\n  padding: var(--spacing-2xl) 0;\n}\n\n/* Grid System */\n.grid {\n  display: grid;\n  gap: var(--spacing-lg);\n}\n\n.grid-cols-1 { grid-template-columns: repeat(1, minmax(0, 1fr)); }\n.grid-cols-2 { grid-template-columns: repeat(2, minmax(0, 1fr)); }\n.grid-cols-3 { grid-template-columns: repeat(3, minmax(0, 1fr)); }\n.grid-cols-4 { grid-template-columns: repeat(4, minmax(0, 1fr)); }\n\n@media (max-width: 1024px) {\n  .lg\\:grid-cols-4 { grid-template-columns: repeat(4, minmax(0, 1fr)); }\n  .lg\\:grid-cols-3 { grid-template-columns: repeat(3, minmax(0, 1fr)); }\n  .lg\\:grid-cols-2 { grid-template-columns: repeat(2, minmax(0, 1fr)); }\n}\n\n@media (max-width: 768px) {\n  .md\\:grid-cols-2 { grid-template-columns: repeat(2, minmax(0, 1fr)); }\n  .md\\:grid-cols-1 { grid-template-columns: repeat(1, minmax(0, 1fr)); }\n  \n  .grid-cols-2,\n  .grid-cols-3,\n  .grid-cols-4 {\n    grid-template-columns: repeat(1, minmax(0, 1fr));\n  }\n}\n\n/* ============================================\n   Card Component (shadcn/ui style)\n   ============================================ */\n.card {\n  background-color: #ffffff !important;\n  border-radius: var(--radius);\n  border: 1px solid hsl(var(--border));\n  box-shadow: var(--shadow-md);\n  transition: box-shadow 0.2s;\n}\n\n.card:hover {\n  box-shadow: var(--shadow-lg);\n}\n\n.card-header {\n  padding: var(--spacing-lg);\n  border-bottom: 1px solid hsl(var(--border));\n  background-color: #ffffff;\n}\n\n.card-title {\n  font-size: 1.25rem;\n  font-weight: 600;\n  margin-bottom: 0;\n  color: hsl(var(--card-foreground));\n}\n\n.card-description {\n  font-size: 0.875rem;\n  color: hsl(var(--muted-foreground));\n  margin-top: var(--spacing-xs);\n}\n\n.card-content {\n  padding: var(--spacing-lg);\n  background-color: #ffffff;\n}\n\n.card-footer {\n  padding: var(--spacing-lg);\n  border-top: 1px solid hsl(var(--border));\n  display: flex;\n  align-items: center;\n  gap: var(--spacing-md);\n}\n\n/* ============================================\n   Button Component (shadcn/ui style)\n   ============================================ */\n.btn {\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  gap: var(--spacing-sm);\n  padding: var(--spacing-sm) var(--spacing-lg);\n  font-size: 0.875rem;\n  font-weight: 500;\n  line-height: 1.25rem;\n  border-radius: 0.5rem;\n  cursor: pointer;\n  transition: all 0.2s;\n  text-decoration: none;\n  white-space: nowrap;\n  border: 1px solid transparent;\n}\n\n.btn:disabled {\n  opacity: 0.5;\n  pointer-events: none;\n}\n\n/* Button Variants */\n.btn-primary {\n  background-color: hsl(var(--primary));\n  color: hsl(var(--primary-foreground));\n}\n\n.btn-primary:hover {\n  background-color: hsl(258 80% 50%);\n  color: hsl(var(--primary-foreground));\n}\n\n.btn-secondary {\n  background-color: hsl(var(--secondary));\n  color: hsl(var(--secondary-foreground));\n}\n\n.btn-secondary:hover {\n  background-color: hsl(270 90% 92%);\n  color: hsl(var(--secondary-foreground));\n}\n\n.btn-outline {\n  background-color: transparent;\n  border-color: hsl(var(--border));\n  color: hsl(var(--foreground));\n}\n\n.btn-outline:hover {\n  background-color: hsl(var(--muted));\n}\n\n.btn-ghost {\n  background-color: transparent;\n  color: hsl(var(--foreground));\n}\n\n.btn-ghost:hover {\n  background-color: hsl(var(--muted));\n}\n\n.btn-destructive {\n  background-color: hsl(var(--destructive));\n  color: hsl(var(--destructive-foreground));\n}\n\n.btn-destructive:hover {\n  background-color: hsl(0 84% 50%);\n  color: hsl(var(--destructive-foreground));\n}\n\n/* Button Sizes */\n.btn-sm {\n  padding: var(--spacing-xs) var(--spacing-md);\n  font-size: 0.8125rem;\n}\n\n.btn-lg {\n  padding: var(--spacing-md) var(--spacing-xl);\n  font-size: 1rem;\n}\n\n/* ============================================\n   Form Components (shadcn/ui style)\n   ============================================ */\n.form-group {\n  margin-bottom: var(--spacing-lg);\n}\n\n.form-label {\n  display: block;\n  margin-bottom: var(--spacing-sm);\n  font-size: 0.875rem;\n  font-weight: 500;\n  color: hsl(var(--foreground));\n}\n\n.form-input,\n.form-select,\n.form-textarea {\n  width: 100%;\n  padding: var(--spacing-sm) var(--spacing-md);\n  font-size: 0.875rem;\n  line-height: 1.25rem;\n  border: 1px solid hsl(var(--input));\n  border-radius: calc(var(--radius) - 2px);\n  background-color: hsl(var(--background));\n  color: hsl(var(--foreground));\n  transition: border-color 0.2s, box-shadow 0.2s;\n}\n\n.form-input:focus,\n.form-select:focus,\n.form-textarea:focus {\n  outline: none;\n  border-color: hsl(var(--ring));\n  box-shadow: 0 0 0 3px hsl(var(--ring) / 0.2);\n}\n\n.form-input:disabled,\n.form-select:disabled,\n.form-textarea:disabled {\n  opacity: 0.5;\n  cursor: not-allowed;\n}\n\n.form-textarea {\n  min-height: 100px;\n  resize: vertical;\n}\n\n.form-error {\n  color: hsl(var(--destructive));\n  font-size: 0.8125rem;\n  margin-top: var(--spacing-xs);\n}\n\n.form-description {\n  color: hsl(var(--muted-foreground));\n  font-size: 0.8125rem;\n  margin-top: var(--spacing-xs);\n}\n\n/* Checkbox */\n.checkbox-wrapper {\n  display: flex;\n  align-items: center;\n  gap: var(--spacing-sm);\n}\n\n.checkbox {\n  width: 1rem;\n  height: 1rem;\n  border: 1px solid hsl(var(--primary));\n  border-radius: calc(var(--radius) - 4px);\n  cursor: pointer;\n}\n\n.checkbox:checked {\n  background-color: hsl(var(--primary));\n}\n\n/* ============================================\n   Badge Component\n   ============================================ */\n.badge {\n  display: inline-flex;\n  align-items: center;\n  padding: 0 var(--spacing-sm);\n  height: 1.375rem;\n  font-size: 0.75rem;\n  font-weight: 600;\n  border-radius: calc(var(--radius) - 2px);\n  border: 1px solid transparent;\n  white-space: nowrap;\n}\n\n.badge-default {\n  background-color: hsl(var(--primary));\n  color: hsl(var(--primary-foreground));\n}\n\n.badge-secondary {\n  background-color: hsl(var(--secondary));\n  color: hsl(var(--secondary-foreground));\n}\n\n.badge-outline {\n  background-color: transparent;\n  border-color: hsl(var(--border));\n  color: hsl(var(--foreground));\n}\n\n.badge-success {\n  background-color: hsl(var(--secondary));\n  color: hsl(var(--secondary-foreground));\n}\n\n.badge-warning {\n  background-color: hsl(45 93% 47%);\n  color: white;\n}\n\n.badge-danger {\n  background-color: hsl(var(--destructive));\n  color: hsl(var(--destructive-foreground));\n}\n\n/* ============================================\n   Alert Component\n   ============================================ */\n.alert {\n  padding: var(--spacing-md);\n  border-radius: var(--radius);\n  border: 1px solid;\n  margin-bottom: var(--spacing-lg);\n  background-color: #ffffff;\n  box-shadow: var(--shadow-md);\n}\n\n.alert-info {\n  background-color: #e3f2fd;\n  border-color: #90caf9;\n  color: #1565c0;\n}\n\n.alert-success {\n  background-color: #e8f5e9;\n  border-color: #81c784;\n  color: #2e7d32;\n}\n\n.alert-warning {\n  background-color: #fff3e0;\n  border-color: #ffb74d;\n  color: #e65100;\n}\n\n.alert-danger {\n  background-color: #ffebee;\n  border-color: #e57373;\n  color: #c62828;\n}\n\n/* ============================================\n   Navigation\n   ============================================ */\n.nav {\n  background-color: white;\n  border-bottom: 1px solid hsl(var(--border));\n  padding: var(--spacing-md) 0;\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  z-index: 999;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.08);\n  width: 100%;\n  overflow-x: hidden;\n}\n\n.nav-container {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.nav-brand {\n  font-size: 1.25rem;\n  font-weight: 700;\n  color: hsl(var(--primary));\n  text-decoration: none;\n  display: flex;\n  align-items: center;\n  gap: 0;\n}\n\n.nav-menu {\n  display: flex;\n  list-style: none;\n  gap: var(--spacing-lg);\n  align-items: center;\n  margin: 0;\n  padding: 0;\n}\n\n.nav-link {\n  text-decoration: none;\n  color: hsl(var(--foreground));\n  font-weight: 500;\n  font-size: 0.875rem;\n  transition: color 0.2s;\n  padding: var(--spacing-sm) var(--spacing-md);\n  border-radius: calc(var(--radius) - 2px);\n}\n\n.nav-link:hover,\n.nav-link.active {\n  color: hsl(var(--primary));\n  background-color: hsl(var(--muted));\n}\n\n/* ============================================\n   Modal/Dialog\n   ============================================ */\n.modal-overlay {\n  position: fixed;\n  inset: 0;\n  background-color: rgba(0, 0, 0, 0.5);\n  display: none;\n  align-items: center;\n  justify-content: center;\n  z-index: 100;\n  backdrop-filter: blur(4px);\n}\n\n.modal-overlay.active {\n  display: flex;\n}\n\n.modal-content {\n  background-color: hsl(var(--background));\n  border-radius: var(--radius);\n  box-shadow: var(--shadow-xl);\n  padding: var(--spacing-xl);\n  max-width: 32rem;\n  width: 90%;\n  max-height: 90vh;\n  overflow-y: auto;\n  border: 1px solid hsl(var(--border));\n}\n\n.modal-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: var(--spacing-lg);\n}\n\n.modal-title {\n  font-size: 1.5rem;\n  font-weight: 600;\n  margin: 0;\n  color: hsl(var(--foreground));\n}\n\n.modal-close {\n  background: none;\n  border: none;\n  font-size: 1.5rem;\n  cursor: pointer;\n  color: hsl(var(--muted-foreground));\n  padding: var(--spacing-xs);\n  width: 2rem;\n  height: 2rem;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border-radius: calc(var(--radius) - 4px);\n  transition: background-color 0.2s;\n}\n\n.modal-close:hover {\n  background-color: hsl(var(--muted));\n  color: hsl(var(--foreground));\n}\n\n/* ============================================\n   Custom Brand Gradients\n   ============================================ */\n.bg-gradient-hero {\n  background: linear-gradient(to right, #f0f8ff, #f0fff0);\n}\n\n.bg-gradient-secondary {\n  background: linear-gradient(135deg, hsl(var(--primary)) 0%, hsl(var(--accent)) 100%);\n}\n\n/* ============================================\n   Skeleton Loader (for loading states)\n   ============================================ */\n.skeleton {\n  background: linear-gradient(90deg, hsl(var(--muted)) 25%, hsl(var(--muted) / 0.5) 50%, hsl(var(--muted)) 75%);\n  background-size: 200% 100%;\n  animation: skeleton-loading 1.5s ease-in-out infinite;\n  border-radius: calc(var(--radius) - 2px);\n}\n\n@keyframes skeleton-loading {\n  0% { background-position: 200% 0; }\n  100% { background-position: -200% 0; }\n}\n\n.skeleton-text {\n  height: 1rem;\n  margin-bottom: var(--spacing-sm);\n}\n\n.skeleton-title {\n  height: 1.5rem;\n  width: 60%;\n  margin-bottom: var(--spacing-md);\n}\n\n.skeleton-avatar {\n  width: 4rem;\n  height: 4rem;\n  border-radius: 50%;\n}\n\n/* ============================================\n   Spinner\n   ============================================ */\n.spinner {\n  border: 3px solid hsl(var(--muted));\n  border-top-color: hsl(var(--primary));\n  border-radius: 50%;\n  width: 2.5rem;\n  height: 2.5rem;\n  animation: spin 1s linear infinite;\n  margin: var(--spacing-xl) auto;\n}\n\n.spinner-sm {\n  width: 1rem;\n  height: 1rem;\n  border-width: 2px;\n}\n\n@keyframes spin {\n  to { transform: rotate(360deg); }\n}\n\n/* ============================================\n   Utility Classes\n   ============================================ */\n/* Display */\n.hidden { display: none !important; }\n.block { display: block; }\n.inline-block { display: inline-block; }\n.flex { display: flex; }\n.inline-flex { display: inline-flex; }\n.grid { display: grid; }\n\n/* Flexbox */\n.flex-row { flex-direction: row; }\n.flex-column { flex-direction: column; }\n.items-center { align-items: center; }\n.items-start { align-items: flex-start; }\n.items-end { align-items: flex-end; }\n.justify-center { justify-content: center; }\n.justify-between { justify-content: space-between; }\n.justify-end { justify-content: flex-end; }\n.flex-wrap { flex-wrap: wrap; }\n.flex-1 { flex: 1; }\n\n/* Gap */\n.gap-1 { gap: var(--spacing-xs); }\n.gap-2 { gap: var(--spacing-sm); }\n.gap-3 { gap: var(--spacing-md); }\n.gap-4 { gap: var(--spacing-lg); }\n.gap-6 { gap: var(--spacing-xl); }\n\n/* Spacing */\n.m-0 { margin: 0; }\n.mt-0 { margin-top: 0; }\n.mt-1 { margin-top: var(--spacing-xs); }\n.mt-2 { margin-top: var(--spacing-sm); }\n.mt-3 { margin-top: var(--spacing-md); }\n.mt-4 { margin-top: var(--spacing-lg); }\n.mt-6 { margin-top: var(--spacing-xl); }\n\n.mb-0 { margin-bottom: 0; }\n.mb-1 { margin-bottom: var(--spacing-xs); }\n.mb-2 { margin-bottom: var(--spacing-sm); }\n.mb-3 { margin-bottom: var(--spacing-md); }\n.mb-4 { margin-bottom: var(--spacing-lg); }\n.mb-6 { margin-bottom: var(--spacing-xl); }\n\n.p-0 { padding: 0; }\n.p-2 { padding: var(--spacing-sm); }\n.p-3 { padding: var(--spacing-md); }\n.p-4 { padding: var(--spacing-lg); }\n.p-6 { padding: var(--spacing-xl); }\n\n/* Text */\n.text-center { text-align: center; }\n.text-left { text-align: left; }\n.text-right { text-align: right; }\n.text-sm { font-size: 0.875rem; }\n.text-base { font-size: 1rem; }\n.text-lg { font-size: 1.125rem; }\n.text-xl { font-size: 1.25rem; }\n.text-2xl { font-size: 1.5rem; }\n.text-3xl { font-size: 1.875rem; }\n.text-4xl { font-size: 2.25rem; }\n\n.font-normal { font-weight: 400; }\n.font-medium { font-weight: 500; }\n.font-semibold { font-weight: 600; }\n.font-bold { font-weight: 700; }\n\n.text-muted { color: hsl(var(--muted-foreground)); }\n.text-primary { color: hsl(var(--primary)); }\n.text-secondary { color: hsl(var(--secondary)); }\n.text-destructive { color: hsl(var(--destructive)); }\n\n/* Backgrounds */\n.bg-background { background-color: hsl(var(--background)); }\n.bg-muted { background-color: hsl(var(--muted)); }\n.bg-primary { background-color: hsl(var(--primary)); }\n.bg-secondary { background-color: hsl(var(--secondary)); }\n\n/* Width & Height */\n.w-full { width: 100%; }\n.h-full { height: 100%; }\n.min-h-screen { min-height: 100vh; }\n\n/* Borders */\n.border { border: 1px solid hsl(var(--border)); }\n.border-b { border-bottom: 1px solid hsl(var(--border)); }\n.border-t { border-top: 1px solid hsl(var(--border)); }\n.rounded { border-radius: var(--radius); }\n.rounded-full { border-radius: 9999px; }\n\n/* Positioning */\n.relative { position: relative; }\n.absolute { position: absolute; }\n.fixed { position: fixed; }\n.sticky { position: sticky; }\n\n/* Overflow */\n.overflow-hidden { overflow: hidden; }\n.overflow-auto { overflow: auto; }\n\n/* Misc */\n.cursor-pointer { cursor: pointer; }\n.pointer-events-none { pointer-events: none; }\n.shadow-sm { box-shadow: var(--shadow-sm); }\n.shadow { box-shadow: var(--shadow); }\n.shadow-md { box-shadow: var(--shadow-md); }\n.shadow-lg { box-shadow: var(--shadow-lg); }\n\n/* Custom Brand Classes */\n.text-primary-custom { color: var(--primary-custom); }\n.text-text-custom { color: var(--text-custom); }\n.bg-primary-custom { background-color: var(--primary-custom); }\n.border-primary-custom { border-color: var(--primary-custom); }\n\n/* Responsive */\n@media (max-width: 640px) {\n  .sm\\:hidden { display: none; }\n  .sm\\:flex-column { flex-direction: column; }\n}\n\n@media (max-width: 768px) {\n  .md\\:hidden { display: none; }\n  .md\\:flex-column { flex-direction: column; }\n}\n\n@media (max-width: 1024px) {\n  .lg\\:hidden { display: none; }\n  .lg\\:flex-column { flex-direction: column; }\n}\n\n/* ============================================\n   FAQ Accordion Animation\n   ============================================ */\ndetails {\n  transition: all 0.3s ease;\n}\n\ndetails summary {\n  list-style: none;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  transition: all 0.2s ease;\n}\n\ndetails summary::-webkit-details-marker {\n  display: none;\n}\n\ndetails summary::after {\n  content: \"‚ñ∂\";\n  font-size: 0.75rem;\n  transition: transform 0.3s ease;\n}\n\ndetails[open] summary::after {\n  transform: rotate(90deg);\n}\n\ndetails[open] {\n  background-color: white !important;\n}\n\ndetails p {\n  animation: fadeIn 0.3s ease;\n}\n\n@keyframes fadeIn {\n  from {\n    opacity: 0;\n    transform: translateY(-10px);\n  }\n  to {\n    opacity: 1;\n    transform: translateY(0);\n  }\n}\n\n/* ============================================\n   Select/Dropdown Styling\n   ============================================ */\nselect, .form-select {\n  appearance: none;\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 24 24' fill='none' stroke='%237C3AED' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'%3E%3Cpolyline points='6 9 12 15 18 9'%3E%3C/polyline%3E%3C/svg%3E\");\n  background-repeat: no-repeat;\n  background-position: right 0.75rem center;\n  background-size: 1rem;\n  padding-right: 2.5rem !important;\n}\n\nselect option {\n  background: white;\n  color: #1A1A1A;\n  padding: 0.75rem;\n  border-radius: 0.5rem;\n}\n\n/* Custom dropdown for better styling */\n.custom-select-wrapper {\n  position: relative;\n}\n\n.custom-select-options {\n  position: absolute;\n  top: 100%;\n  left: 0;\n  right: 0;\n  background: white;\n  border-radius: 0.75rem;\n  box-shadow: 0 10px 40px rgba(0, 0, 0, 0.1);\n  margin-top: 0.5rem;\n  overflow: hidden;\n  z-index: 100;\n}\n\n.custom-select-option {\n  padding: 0.75rem 1rem;\n  cursor: pointer;\n  transition: all 0.2s ease;\n}\n\n.custom-select-option:hover {\n  background: #F3E8FF;\n  color: #7C3AED;\n}\n\n/* ============================================\n   3D Icon Effects\n   ============================================ */\n.icon-3d {\n  background: linear-gradient(135deg, #7C3AED 0%, #A78BFA 100%);\n  box-shadow: \n    0 10px 20px rgba(124, 58, 237, 0.2),\n    0 5px 10px rgba(124, 58, 237, 0.1),\n    inset 0 -2px 10px rgba(0, 0, 0, 0.1);\n  position: relative;\n  overflow: hidden;\n  flex-shrink: 0;\n  min-width: 4rem;\n  min-height: 4rem;\n}\n\n.icon-3d::before {\n  content: '';\n  position: absolute;\n  top: 0;\n  left: -100%;\n  width: 100%;\n  height: 100%;\n  background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.3), transparent);\n  transition: left 0.5s ease;\n}\n\n.icon-3d:hover::before {\n  left: 100%;\n}\n\n/* Mobile responsive grid fixes */\n@media (max-width: 768px) {\n  .grid[style*=\"grid-template-columns: 1fr 1fr\"] {\n    grid-template-columns: 1fr !important;\n  }\n  \n  .md\\:grid-cols-2 {\n    grid-template-columns: repeat(1, minmax(0, 1fr)) !important;\n  }\n  \n  .md\\:grid-cols-3 {\n    grid-template-columns: repeat(1, minmax(0, 1fr)) !important;\n  }\n  \n  .md\\:grid-cols-4 {\n    grid-template-columns: repeat(1, minmax(0, 1fr)) !important;\n  }\n  \n  /* Search page: sidebar to full width on mobile */\n  .grid[style*=\"grid-template-columns: 300px 1fr\"] {\n    grid-template-columns: 1fr !important;\n  }\n  \n  /* Hide sidebar on mobile by default */\n  #filters-sidebar {\n    position: fixed !important;\n    top: 0 !important;\n    left: -100% !important;\n    width: 90% !important;\n    max-width: 350px !important;\n    height: 100vh !important;\n    z-index: 1000 !important;\n    transition: left 0.3s ease !important;\n    overflow-y: auto !important;\n  }\n  \n  #filters-sidebar.active {\n    left: 0 !important;\n  }\n  \n  /* Mobile filters toggle button */\n  .mobile-filters-toggle {\n    display: block !important;\n    position: fixed;\n    bottom: 1.5rem;\n    right: 1.5rem;\n    width: 3.5rem;\n    height: 3.5rem;\n    border-radius: 50%;\n    background: linear-gradient(135deg, #7C3AED 0%, #A78BFA 100%);\n    color: white;\n    border: none;\n    box-shadow: 0 10px 30px rgba(124, 58, 237, 0.3);\n    z-index: 999;\n    cursor: pointer;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n  }\n  \n  /* Overlay for mobile sidebar */\n  .mobile-overlay {\n    display: none;\n    position: fixed;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background: rgba(0, 0, 0, 0.5);\n    z-index: 999;\n  }\n  \n  .mobile-overlay.active {\n    display: block;\n  }\n}\n\n@media (min-width: 769px) {\n  .mobile-filters-toggle {\n    display: none !important;\n  }\n}\n\n/* Services Grid Layout */\n.services-grid {\n  display: grid;\n  grid-template-columns: 1fr;\n  gap: 1rem;\n}\n\n@media (min-width: 640px) {\n  .services-grid {\n    grid-template-columns: repeat(2, 1fr);\n  }\n}\n\n@media (min-width: 1024px) {\n  .services-grid {\n    grid-template-columns: repeat(4, 1fr);\n  }\n}\n\n/* Burger Menu Styles */\n.burger-menu {\n  display: none;\n  flex-direction: column;\n  gap: 5px;\n  background: transparent;\n  border: none;\n  cursor: pointer;\n  padding: 0.5rem;\n  z-index: 1002;\n  position: relative;\n  border-radius: 0.375rem;\n}\n\n.burger-menu span {\n  display: block;\n  width: 25px;\n  height: 3px;\n  background-color: #7C3AED;\n  border-radius: 3px;\n  transition: all 0.3s ease;\n}\n\n.burger-menu.active span:nth-child(1) {\n  transform: rotate(45deg) translate(8px, 8px);\n}\n\n.burger-menu.active span:nth-child(2) {\n  opacity: 0;\n}\n\n.burger-menu.active span:nth-child(3) {\n  transform: rotate(-45deg) translate(7px, -7px);\n}\n\n/* Desktop Navigation - default */\n@media (min-width: 1024px) {\n  .burger-menu {\n    display: none !important;\n  }\n  \n  .nav-menu {\n    position: static !important;\n    display: flex !important;\n    flex-direction: row !important;\n    width: auto !important;\n    height: auto !important;\n    background: transparent !important;\n    padding: 0 !important;\n    box-shadow: none !important;\n    align-items: center !important;\n    gap: var(--spacing-lg) !important;\n  }\n  \n  .nav-menu li {\n    width: auto !important;\n    margin: 0 !important;\n    padding: 0 !important;\n    border-bottom: none !important;\n  }\n}\n\n/* Mobile and Tablet Navigation */\n@media (max-width: 1023px) {\n  /* Prevent horizontal scroll */\n  html, body {\n    overflow-x: hidden !important;\n    width: 100%;\n    position: relative;\n  }\n  \n  .burger-menu {\n    display: flex !important;\n  }\n  \n  .nav-menu {\n    position: fixed;\n    top: 70px;\n    right: 0;\n    width: 280px;\n    height: calc(100vh - 70px);\n    background: white;\n    flex-direction: column;\n    padding: 2rem;\n    box-shadow: -4px 0 20px rgba(0, 0, 0, 0.15);\n    border-left: 1px solid #F0F0F0;\n    transform: translateX(100%);\n    transition: transform 0.3s ease;\n    z-index: 1001;\n    align-items: flex-start !important;\n    overflow-y: auto;\n  }\n  \n  .nav-menu.active {\n    transform: translateX(0);\n  }\n  \n  .nav-menu li {\n    width: 100%;\n    margin: 0 !important;\n    padding: 0.75rem 0;\n    border-bottom: 1px solid #F0F0F0;\n  }\n  \n  .nav-menu li:last-child {\n    border-bottom: none;\n    margin-top: 1rem !important;\n  }\n  \n  /* Hero CTA Buttons - mobile vertical layout */\n  .hero-cta-buttons {\n    flex-direction: column !important;\n    gap: 20px !important;\n  }\n  \n  .hero-cta-buttons .btn {\n    width: 100% !important;\n    text-align: center !important;\n    justify-content: center !important;\n    min-height: 56px !important;\n    display: flex !important;\n    align-items: center !important;\n    padding: 0.75rem 2rem !important;\n  }\n  \n  /* Hero section - single column on mobile */\n  .section .grid {\n    grid-template-columns: 1fr !important;\n    gap: 2rem !important;\n  }\n  \n  /* Hero title - smaller on mobile */\n  .section h1 {\n    font-size: 2rem !important;\n  }\n  \n  /* Hero image - full width on mobile - only for hero section */\n  section:first-of-type .grid > div:last-child {\n    order: -1;\n  }\n}\n\n/* ============================================\n   Psychologist Cards - Adaptive Design\n   ============================================ */\n\n/* Desktop layout */\n.psychologist-card-inner {\n  display: flex;\n  flex-direction: column;\n  gap: 1rem;\n}\n\n.psychologist-header {\n  display: flex;\n  gap: 1rem;\n  align-items: flex-start;\n}\n\n.psychologist-photo {\n  width: 80px;\n  height: 80px;\n  min-width: 80px;\n  min-height: 80px;\n  border-radius: 0.5rem;\n  object-fit: cover;\n  flex-shrink: 0;\n  display: block;\n}\n\n.psychologist-info {\n  flex: 1;\n  min-width: 0;\n}\n\n.psychologist-credentials {\n  display: flex;\n  gap: 1rem;\n  font-size: 0.875rem;\n  color: #666;\n  align-items: center;\n}\n\n.psychologist-credentials span {\n  display: inline-flex;\n  align-items: center;\n  gap: 0.25rem;\n}\n\n.psychologist-description {\n  display: block;\n  color: #666;\n  font-size: 0.875rem;\n  line-height: 1.5;\n  margin: 1rem 0;\n}\n\n.psychologist-booking {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  gap: 1rem;\n  padding-top: 1rem;\n  border-top: 1px solid #F0F0F0;\n}\n\n.psychologist-price {\n  text-align: left;\n}\n\n.psychologist-booking .btn {\n  flex-shrink: 0;\n  max-width: 200px;\n}\n\n/* Tablet layout */\n@media (max-width: 768px) {\n  .psychologist-photo {\n    width: 70px;\n    height: 70px;\n    min-width: 70px;\n    min-height: 70px;\n  }\n  \n  .psychologist-header h3 {\n    font-size: 1rem !important;\n  }\n  \n  .psychologist-description {\n    display: none !important;\n  }\n  \n  .psychologist-booking {\n    flex-direction: column-reverse;\n    align-items: stretch;\n    gap: 0.75rem;\n  }\n  \n  .psychologist-price {\n    text-align: center;\n    order: 2;\n  }\n  \n  .psychologist-booking .btn {\n    max-width: 100%;\n    order: 1;\n  }\n}\n\n/* Mobile layout */\n@media (max-width: 480px) {\n  .psychologist-card {\n    padding: 0.75rem !important;\n  }\n  \n  .psychologist-header {\n    gap: 0.75rem;\n  }\n  \n  .psychologist-photo {\n    width: 60px;\n    height: 60px;\n    min-width: 60px;\n    min-height: 60px;\n  }\n  \n  .psychologist-header h3 {\n    font-size: 0.95rem !important;\n  }\n  \n  .psychologist-info p {\n    font-size: 0.8rem !important;\n  }\n  \n  .psychologist-credentials {\n    font-size: 0.75rem;\n    gap: 0.5rem;\n  }\n  \n  .psychologist-price div:first-child {\n    font-size: 1.25rem !important;\n  }\n  \n  .psychologist-description {\n    display: none !important;\n    visibility: hidden !important;\n    height: 0 !important;\n    margin: 0 !important;\n    padding: 0 !important;\n    overflow: hidden !important;\n  }\n}\n\n/* Filter inputs - white text and placeholder */\n.filter-price-input::placeholder {\n  color: rgba(255, 255, 255, 0.7) !important;\n}\n\n.filter-price-input::-webkit-input-placeholder {\n  color: rgba(255, 255, 255, 0.7) !important;\n}\n\n/* Step number circles - prevent squishing */\n.flex.items-center.justify-center[style*=\"border-radius: 50%\"] {\n  flex-shrink: 0 !important;\n  min-width: 3rem !important;\n  min-height: 3rem !important;\n}\n\n/* Blog page - responsive grid */\n@media (max-width: 768px) {\n  /* Blog grid - single column on mobile */\n  div[style*=\"grid-template-columns: repeat(auto-fill, minmax(350px, 1fr))\"] {\n    grid-template-columns: 1fr !important;\n    gap: 1.5rem !important;\n  }\n  \n  /* Blog hero title - smaller on mobile */\n  section[style*=\"background: linear-gradient(135deg, #A78BFA\"] h1 {\n    font-size: 2rem !important;\n  }\n  \n  /* Blog hero text */\n  section[style*=\"background: linear-gradient(135deg, #A78BFA\"] p {\n    font-size: 1rem !important;\n  }\n  \n  /* Blog article cards - adjust padding */\n  article.card > div[style*=\"padding: 1.5rem\"] {\n    padding: 1rem !important;\n  }\n  \n  /* Blog article titles - slightly smaller */\n  article.card h3 {\n    font-size: 1.125rem !important;\n  }\n  \n  /* Blog article image height */\n  article.card > div[style*=\"height: 200px\"] {\n    height: 160px !important;\n  }\n}\n\n/* Auth buttons - responsive layout */\n@media (max-width: 768px) {\n  .auth-buttons {\n    flex-direction: column !important;\n    gap: 1rem !important;\n  }\n  \n  .auth-buttons .btn,\n  .auth-buttons label {\n    width: 100% !important;\n  }\n  \n  .auth-buttons .flex-1 {\n    flex: none !important;\n  }\n}\n\n.filter-price-input::-moz-placeholder {\n  color: rgba(255, 255, 255, 0.7) !important;\n}\n\n.filter-price-input:-ms-input-placeholder {\n  color: rgba(255, 255, 255, 0.7) !important;\n}\n\n/* Filter select styling */\n.filter-select {\n  appearance: none;\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='12' height='12' viewBox='0 0 24 24' fill='none' stroke='white' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'%3E%3Cpolyline points='6 9 12 15 18 9'%3E%3C/polyline%3E%3C/svg%3E\");\n  background-repeat: no-repeat;\n  background-position: right 0.5rem center;\n  padding-right: 2rem !important;\n}\n\n/* Custom rounded checkboxes */\n.filter-checkbox {\n  appearance: none !important;\n  -webkit-appearance: none !important;\n  -moz-appearance: none !important;\n  width: 1.125rem !important;\n  height: 1.125rem !important;\n  border: 2px solid rgba(255, 255, 255, 0.5) !important;\n  border-radius: 0.25rem !important;\n  background-color: rgba(255, 255, 255, 0.1) !important;\n  cursor: pointer !important;\n  position: relative !important;\n  transition: all 0.2s ease !important;\n  margin: 0 !important;\n  flex-shrink: 0 !important;\n}\n\n.filter-checkbox:checked {\n  background-color: #7C3AED !important;\n  border-color: #7C3AED !important;\n}\n\n.filter-checkbox:checked::after {\n  content: '' !important;\n  position: absolute !important;\n  display: block !important;\n  left: 3px !important;\n  top: 0px !important;\n  width: 5px !important;\n  height: 10px !important;\n  border: solid white !important;\n  border-width: 0 2px 2px 0 !important;\n  transform: rotate(45deg) !important;\n}\n\n.filter-checkbox:hover {\n  border-color: rgba(255, 255, 255, 0.8) !important;\n}\n","size_bytes":31506},"replit.md":{"content":"# Overview\n\npsytalk.pro is a comprehensive online psychology platform connecting clients with qualified psychologists for remote consultations. It's a full-stack web application with a pure HTML/CSS/JavaScript frontend and an Express.js backend. The platform supports three user roles: clients, psychologists, and administrators. It enables clients to search for, book, and conduct sessions via video, audio, or chat. Psychologists can manage profiles, schedules, and services, while administrators oversee verification, platform management, and analytics. The project aims to provide a modern, accessible, and user-friendly experience for remote psychological support.\n\n# User Preferences\n\nPreferred communication style: Simple, everyday language.\nPreferred language: Russian (all communication should be in Russian).\n\n# System Architecture\n\n## Frontend Architecture\nThe client-side is built with pure HTML/CSS/JavaScript, recreating a shadcn/ui-inspired design system without external dependencies. It uses a multi-page approach with static HTML files, custom CSS styling with HSL variables, Lucide icons via CDN, and Vanilla JavaScript for interactivity (tabs, filters, modals, dynamic content). API integration is handled via Fetch API.\n\n## Backend Architecture\nThe server uses Express.js in ES module format, providing a RESTful API. It integrates with MySQL for production (reg.ru compatible) and includes a DEMO mode fallback. Authentication uses bcrypt for password hashing and express-session for session management. The backend is designed with RESTful endpoints organized by feature areas.\n\n## Data Storage Solutions\nThe application utilizes a PostgreSQL database (Neon Database) managed with Drizzle ORM for type-safe operations and migrations. The schema supports users, psychologists, appointments, reviews, messages, and availability. Google Cloud Storage is used for static assets and document uploads.\n\n## Authentication and Authorization\nThe platform implements role-based access control for client, psychologist, and admin roles. Authentication uses email/password with bcrypt hashing and client-side session management. Authorization is enforced at both API and UI levels, including password validation and secure routes.\n\n## Communication Features\nReal-time consultation capabilities include:\n- Browser-based video calling with camera/microphone controls.\n- Audio-only consultation mode.\n- Text-based chat messaging for sessions or follow-ups.\n- Optional session recording with consent management.\n\n# External Dependencies\n\n## UI and Component Libraries\n- Lucide icons (via CDN)\n\n# Recent Changes (October 22, 2025)\n\n## Latest Update - Navigation Refinement (October 23, 2025)\n- **Removed \"—É—Å–ª—É–≥–∏\" from navigation**: Simplified menu structure on all pages\n- **Renamed \"–ø—Å–∏—Ö–æ–ª–æ–≥–∏\" to \"–ù–∞–π—Ç–∏ –ø—Å–∏—Ö–æ–ª–æ–≥–∞\"**: More actionable and clear for users\n- **Highlighted \"–ù–∞–π—Ç–∏ –ø—Å–∏—Ö–æ–ª–æ–≥–∞\"**: Purple accent color (#7C3AED) and bold font on all pages\n- **Added breadcrumbs**: Added navigation breadcrumbs to blog.html and offers.html pages\n  - Format: –≥–ª–∞–≤–Ω–∞—è ‚Ä∫ –±–ª–æ–≥ / –≥–ª–∞–≤–Ω–∞—è ‚Ä∫ —Å–ø–µ—Ü. –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è\n- **Applied changes across all pages**: index.html, search.html, blog.html, offers.html, login.html, register.html\n\n## Previous Update - Psychologist Avatars + Mobile Fixes (October 22, 2025)\n- **Replaced photos with gradient avatars**: Psychologists now have beautiful gradient avatars with initials\n  - Removed external Unsplash images that didn't load on mobile\n  - Each psychologist has unique gradient color (6 gradient variations)\n  - Initials displayed in white on gradient background\n  - Avatars are always visible and load instantly\n- **Fixed psychologist photos on mobile**: Avatars protected from compression\n  - Added min-width and min-height to prevent squishing on all screen sizes\n  - Desktop: 80x80px, Tablet: 70x70px, Mobile: 60x60px\n  - Added display: block for reliability\n- **Centered login icon**: Lock icon now properly centered with margin-left/right: auto\n- **Unified auth buttons**: \"–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è\" button now matches \"–í–æ–π—Ç–∏\" button colors\n  - Background: #7C3AED, Hover: #6D28D9, White text\n\n## Previous Update - Blog Page Mobile Adaptation\n- **Mobile-responsive blog grid**: Articles now display in single column on mobile\n  - Changed from multi-column grid to single column (<768px)\n  - Reduced gap between articles from 2rem to 1.5rem\n- **Optimized typography for mobile**:\n  - Hero title: 3rem ‚Üí 2rem\n  - Hero description: 1.25rem ‚Üí 1rem\n  - Article titles: 1.25rem ‚Üí 1.125rem\n- **Adjusted card layout**:\n  - Article image height: 200px ‚Üí 160px on mobile\n  - Card padding: 1.5rem ‚Üí 1rem on mobile\n- **Result**: Blog page is now fully responsive and comfortable to read on all devices\n\n## Previous Update - How It Works Section Fix\n- **Fixed step order on mobile**: Steps now display in correct 1‚Üí2‚Üí3 order\n  - Changed CSS selector from `.section .grid > div:last-child` to `section:first-of-type .grid > div:last-child`\n  - This prevents order change in \"–ö–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç\" section while keeping Hero image first on mobile\n- **Fixed step number circles**: Circles are now perfectly round and don't squish\n  - Added flex-shrink: 0, min-width: 3rem, min-height: 3rem to prevent compression\n  - Circles maintain shape on all screen sizes\n\n## Previous Update - Auth Pages Mobile Fix\n- **Added burger menu to login and register pages**: Full navigation on all pages\n  - Added complete navigation menu with burger button on login.html and register.html\n  - Menu includes: —É—Å–ª—É–≥–∏, –ø—Å–∏—Ö–æ–ª–æ–≥–∏, –±–ª–æ–≥, —Å–ø–µ—Ü. –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è + auth button\n  - Same mobile menu functionality as other pages (scroll lock, auto-close, click outside)\n- **Fixed auth buttons for mobile**: Buttons now stack vertically on mobile devices\n  - \"–Ø –∫–ª–∏–µ–Ω—Ç\" / \"–Ø –ø—Å–∏—Ö–æ–ª–æ–≥\" buttons on login.html display vertically (<768px)\n  - Role selection buttons on register.html adapt to vertical layout\n  - Added .auth-buttons responsive class with flex-direction: column\n\n## Previous Updates\n- **Mobile Card Layout**: Fixed psychologist card order - Button before Price on mobile\n- **Navigation**: Fixed position with z-index hierarchy, removed backdrop-filter blur\n- **Standardized Buttons**: All buttons use border-radius: 0.5rem consistently\n- **Icon Fixes**: 3D icons (.icon-3d) don't stretch - flex-shrink: 0, min-width/height: 4rem","size_bytes":6498},"public/js/api.js":{"content":"// API Client Module\n\nconst API = {\n  baseURL: '',\n  \n  // Generic fetch wrapper\n  async request(method, url, data = null) {\n    const options = {\n      method,\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      credentials: 'same-origin',\n    };\n    \n    if (data) {\n      options.body = JSON.stringify(data);\n    }\n    \n    try {\n      const response = await fetch(url, options);\n      const responseData = await response.json();\n      \n      if (!response.ok) {\n        throw new Error(responseData.error || `HTTP error! status: ${response.status}`);\n      }\n      \n      return responseData;\n    } catch (error) {\n      console.error('API Error:', error);\n      throw error;\n    }\n  },\n  \n  // Convenience methods\n  get(url) {\n    return this.request('GET', url);\n  },\n  \n  post(url, data) {\n    return this.request('POST', url, data);\n  },\n  \n  put(url, data) {\n    return this.request('PUT', url, data);\n  },\n  \n  delete(url) {\n    return this.request('DELETE', url);\n  },\n  \n  // Auth endpoints\n  auth: {\n    register(data) {\n      return API.post('/api/auth/register', data);\n    },\n    \n    login(email, password) {\n      return API.post('/api/auth/login', { email, password });\n    },\n    \n    logout() {\n      return API.post('/api/auth/logout');\n    },\n    \n    me() {\n      return API.get('/api/auth/me');\n    }\n  },\n  \n  // User endpoints\n  users: {\n    get(id) {\n      return API.get(`/api/users/${id}`);\n    },\n    \n    update(id, data) {\n      return API.put(`/api/users/${id}`, data);\n    }\n  },\n  \n  // Psychologist endpoints\n  psychologists: {\n    search(filters = {}) {\n      const params = new URLSearchParams(filters);\n      return API.get(`/api/psychologists/search?${params}`);\n    },\n    \n    get(id) {\n      return API.get(`/api/psychologists/${id}`);\n    },\n    \n    getByUserId(userId) {\n      return API.get(`/api/psychologists/user/${userId}`);\n    },\n    \n    create(data) {\n      return API.post('/api/psychologists', data);\n    },\n    \n    update(id, data) {\n      return API.put(`/api/psychologists/${id}`, data);\n    }\n  },\n  \n  // Appointment endpoints\n  appointments: {\n    create(data) {\n      return API.post('/api/appointments', data);\n    },\n    \n    getByClient(clientId) {\n      return API.get(`/api/appointments/client/${clientId}`);\n    },\n    \n    getByPsychologist(psychologistId) {\n      return API.get(`/api/appointments/psychologist/${psychologistId}`);\n    },\n    \n    update(id, data) {\n      return API.put(`/api/appointments/${id}`, data);\n    }\n  },\n  \n  // Review endpoints\n  reviews: {\n    create(data) {\n      return API.post('/api/reviews', data);\n    },\n    \n    getByPsychologist(psychologistId) {\n      return API.get(`/api/reviews/psychologist/${psychologistId}`);\n    }\n  },\n  \n  // Message endpoints\n  messages: {\n    create(data) {\n      return API.post('/api/messages', data);\n    },\n    \n    getBetween(user1Id, user2Id) {\n      return API.get(`/api/messages/${user1Id}/${user2Id}`);\n    }\n  },\n  \n  // Availability endpoints\n  availability: {\n    create(data) {\n      return API.post('/api/availability', data);\n    },\n    \n    getByPsychologist(psychologistId) {\n      return API.get(`/api/availability/psychologist/${psychologistId}`);\n    }\n  },\n  \n  // Admin endpoints\n  admin: {\n    getUsers() {\n      return API.get('/api/admin/users');\n    },\n    \n    getPendingPsychologists() {\n      return API.get('/api/admin/psychologists/pending');\n    },\n    \n    approvePsychologist(id) {\n      return API.put(`/api/admin/psychologists/${id}/approve`);\n    },\n    \n    rejectPsychologist(id) {\n      return API.delete(`/api/admin/psychologists/${id}/reject`);\n    },\n    \n    getStats() {\n      return API.get('/api/admin/stats');\n    }\n  }\n};\n","size_bytes":3737},"public/js/auth.js":{"content":"// Authentication Module\n\nconst Auth = {\n  currentUser: null,\n  \n  // Initialize auth state\n  async init() {\n    try {\n      const user = await API.auth.me();\n      this.currentUser = user;\n      return user;\n    } catch (error) {\n      this.currentUser = null;\n      return null;\n    }\n  },\n  \n  // Register new user\n  async register(data) {\n    try {\n      const user = await API.auth.register(data);\n      this.currentUser = user;\n      return user;\n    } catch (error) {\n      throw new Error(error.message || 'Registration failed');\n    }\n  },\n  \n  // Login\n  async login(email, password) {\n    try {\n      const user = await API.auth.login(email, password);\n      this.currentUser = user;\n      return user;\n    } catch (error) {\n      throw new Error(error.message || 'Login failed');\n    }\n  },\n  \n  // Logout\n  async logout() {\n    try {\n      await API.auth.logout();\n      this.currentUser = null;\n    } catch (error) {\n      console.error('Logout error:', error);\n    }\n  },\n  \n  // Check if user is authenticated\n  isAuthenticated() {\n    return this.currentUser !== null;\n  },\n  \n  // Check if user has specific role\n  hasRole(role) {\n    return this.currentUser && this.currentUser.role === role;\n  },\n  \n  // Redirect based on role\n  redirectToDashboard() {\n    if (!this.currentUser) {\n      window.location.href = '/login.html';\n      return;\n    }\n    \n    switch (this.currentUser.role) {\n      case 'client':\n        window.location.href = '/client-dashboard.html';\n        break;\n      case 'psychologist':\n        window.location.href = '/psychologist-dashboard.html';\n        break;\n      case 'admin':\n        window.location.href = '/admin-dashboard.html';\n        break;\n      default:\n        window.location.href = '/';\n    }\n  },\n  \n  // Require authentication (redirect if not logged in)\n  async requireAuth(requiredRole = null) {\n    if (!this.currentUser) {\n      const user = await this.init();\n      if (!user) {\n        window.location.href = '/login.html';\n        return false;\n      }\n    }\n    \n    if (requiredRole && !this.hasRole(requiredRole)) {\n      this.redirectToDashboard();\n      return false;\n    }\n    \n    return true;\n  },\n  \n  // Get current user\n  getUser() {\n    return this.currentUser;\n  }\n};\n","size_bytes":2252},"START_HERE.md":{"content":"# üöÄ –ù–∞—á–Ω–∏—Ç–µ –∑–¥–µ—Å—å!\n\n## ‚úÖ –ú–∏–≥—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞!\n\n–í–∞—à –ø—Ä–æ–µ–∫—Ç **PsychPlatform** —É—Å–ø–µ—à–Ω–æ –º–∏–≥—Ä–∏—Ä–æ–≤–∞–Ω —Å **React + PostgreSQL** –Ω–∞ **—á–∏—Å—Ç—ã–π HTML/CSS/JS + MySQL**.\n\n## üìÅ –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –Ω–æ–≤–æ–π –≤–µ—Ä—Å–∏–∏\n\n```\nproject/\n‚îú‚îÄ‚îÄ server/              # –ë–µ–∫–µ–Ω–¥ (MySQL + JavaScript)\n‚îú‚îÄ‚îÄ public/              # –§—Ä–æ–Ω—Ç–µ–Ω–¥ (HTML/CSS/JS)\n‚îú‚îÄ‚îÄ QUICK_START.md       # ‚≠ê –ù–ê–ß–ù–ò–¢–ï –° –≠–¢–û–ì–û –§–ê–ô–õ–ê\n‚îú‚îÄ‚îÄ DEPLOYMENT_REG_RU.md # –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ –¥–µ–ø–ª–æ—é –Ω–∞ —Ä–µ–≥.—Ä—É\n‚îú‚îÄ‚îÄ README_NEW.md        # –ü–æ–ª–Ω–∞—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è\n‚îî‚îÄ‚îÄ package-new.json     # –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏\n```\n\n## üéØ –ß—Ç–æ –¥–∞–ª—å—à–µ?\n\n### –í–∞—Ä–∏–∞–Ω—Ç 1: –õ–æ–∫–∞–ª—å–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ (–µ—Å–ª–∏ –µ—Å—Ç—å MySQL)\n\n```bash\n# 1. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏\nnpm install express express-session express-mysql-session mysql2 bcrypt\n\n# 2. –°–æ–∑–¥–∞–π—Ç–µ .env —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏ MySQL\ncp .env.example .env\n\n# 3. –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–π—Ç–µ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö\ncd server && node seed.js\n\n# 4. –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–µ—Ä–≤–µ—Ä\nnode index.js\n```\n\n**–û—Ç–∫—Ä–æ–π—Ç–µ:** `http://localhost:5000`\n\n### –í–∞—Ä–∏–∞–Ω—Ç 2: –î–µ–ø–ª–æ–π –Ω–∞ —Ä–µ–≥.—Ä—É (—Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è)\n\n–°–ª–µ–¥—É–π—Ç–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º –≤ **DEPLOYMENT_REG_RU.md**\n\n## üîë –î–µ–º–æ-–∞–∫–∫–∞—É–Ω—Ç—ã\n\n–ü–æ—Å–ª–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è `seed.js`:\n\n- **–ê–¥–º–∏–Ω:** admin@psychplatform.com / admin123\n- **–ü—Å–∏—Ö–æ–ª–æ–≥:** anna.petrova@psychplatform.com / psychologist123  \n- **–ö–ª–∏–µ–Ω—Ç:** maria.ivanova@example.com / client123\n\n## üìö –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è\n\n1. **QUICK_START.md** - –ó–∞–ø—É—Å–∫ –∑–∞ 5 –º–∏–Ω—É—Ç ‚≠ê\n2. **DEPLOYMENT_REG_RU.md** - –î–µ—Ç–∞–ª—å–Ω–∞—è –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ –¥–µ–ø–ª–æ—é\n3. **README_NEW.md** - –ü–æ–ª–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞\n4. **MIGRATION_COMPLETE.md** - –ß—Ç–æ –±—ã–ª–æ —Å–¥–µ–ª–∞–Ω–æ\n5. **TECH_STACK_COMPARISON.md** - –°—Ä–∞–≤–Ω–µ–Ω–∏–µ —Å—Ç–∞—Ä–æ–≥–æ –∏ –Ω–æ–≤–æ–≥–æ —Å—Ç–µ–∫–∞\n\n## ‚ú® –ß—Ç–æ –≥–æ—Ç–æ–≤–æ\n\n### –ë–µ–∫–µ–Ω–¥ (100%)\n- ‚úÖ MySQL —Å—Ö–µ–º–∞ (8 —Ç–∞–±–ª–∏—Ü)\n- ‚úÖ –ü–æ–ª–Ω—ã–π Storage layer\n- ‚úÖ –í—Å–µ API endpoints (auth, users, psychologists, appointments, reviews, admin)\n- ‚úÖ –°–µ—Å—Å–∏–∏ –≤ MySQL\n- ‚úÖ –î–µ–º–æ-–¥–∞–Ω–Ω—ã–µ (seed.js)\n\n### –§—Ä–æ–Ω—Ç–µ–Ω–¥ (100%)\n- ‚úÖ 9 HTML —Å—Ç—Ä–∞–Ω–∏—Ü\n- ‚úÖ CSS –¥–∏–∑–∞–π–Ω-—Å–∏—Å—Ç–µ–º–∞\n- ‚úÖ JavaScript –º–æ–¥—É–ª–∏ (api.js, auth.js)\n- ‚úÖ –í—Å–µ —Ä–æ–ª–∏ (–∫–ª–∏–µ–Ω—Ç, –ø—Å–∏—Ö–æ–ª–æ–≥, –∞–¥–º–∏–Ω)\n\n### –§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å (85%)\n- ‚úÖ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –∏ –≤—Ö–æ–¥\n- ‚úÖ –ü–æ–∏—Å–∫ –ø—Å–∏—Ö–æ–ª–æ–≥–æ–≤\n- ‚úÖ –ë—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–π\n- ‚úÖ –õ–∏—á–Ω—ã–µ –∫–∞–±–∏–Ω–µ—Ç—ã\n- ‚úÖ –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å\n- ‚úÖ –°–∏—Å—Ç–µ–º–∞ –æ—Ç–∑—ã–≤–æ–≤\n- ‚è∏Ô∏è WebRTC (–±–∞–∑–æ–≤–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ —Å–æ–∑–¥–∞–Ω–∞)\n\n## ‚ö†Ô∏è –í–∞–∂–Ω–æ\n\n**MySQL –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≤ Replit**, –ø–æ—ç—Ç–æ–º—É –ø–æ–ª–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤–æ–∑–º–æ–∂–Ω–æ —Ç–æ–ª—å–∫–æ:\n1. –ù–∞ –ª–æ–∫–∞–ª—å–Ω–æ–π –º–∞—à–∏–Ω–µ —Å MySQL\n2. –ù–∞ —Ä–µ–≥.—Ä—É –ø–æ—Å–ª–µ –¥–µ–ø–ª–æ—è\n\n## üí° –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏\n\n1. **–ü—Ä–æ—á–∏—Ç–∞–π—Ç–µ QUICK_START.md** –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ —Å—Ç–∞—Ä—Ç–∞\n2. **–†–∞–∑–≤–µ—Ä–Ω–∏—Ç–µ –Ω–∞ —Ä–µ–≥.—Ä—É** —Å–ª–µ–¥—É—è DEPLOYMENT_REG_RU.md\n3. **–ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ** –≤—Å–µ —Ñ—É–Ω–∫—Ü–∏–∏ —Å –¥–µ–º–æ-–∞–∫–∫–∞—É–Ω—Ç–∞–º–∏\n4. **–£–¥–∞–ª–∏—Ç–µ –¥–µ–º–æ-–¥–∞–Ω–Ω—ã–µ** –ø–µ—Ä–µ–¥ –ø—Ä–æ–¥–∞–∫—à–µ–Ω–æ–º\n\n## üéâ –ì–æ—Ç–æ–≤–æ –∫ –¥–µ–ø–ª–æ—é!\n\n–ü—Ä–æ–µ–∫—Ç –ø–æ–ª–Ω–æ—Å—Ç—å—é –≥–æ—Ç–æ–≤ –∫ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—é –Ω–∞ **—Ä–µ–≥.—Ä—É** –∏–ª–∏ –ª—é–±–æ–º –¥—Ä—É–≥–æ–º —Ö–æ—Å—Ç–∏–Ω–≥–µ —Å **Node.js** –∏ **MySQL**!\n\n---\n\n**–í–æ–ø—Ä–æ—Å—ã?** –°–º–æ—Ç—Ä–∏—Ç–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—é –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏—Ö .md —Ñ–∞–π–ª–∞—Ö.\n","size_bytes":3839},"MIGRATION_COMPLETE.md":{"content":"# ‚úÖ –ú–∏–≥—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞!\n\n## üéâ –ß—Ç–æ —Å–¥–µ–ª–∞–Ω–æ\n\n### 1. –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö: PostgreSQL ‚Üí MySQL\n- ‚úÖ –°–æ–∑–¥–∞–Ω–∞ –ø–æ–ª–Ω–∞—è MySQL —Å—Ö–µ–º–∞ (server-new/schema.sql)\n- ‚úÖ –†–µ–∞–ª–∏–∑–æ–≤–∞–Ω MySQLStorage —Å –ø–æ–ª–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å—é\n- ‚úÖ –ù–∞—Å—Ç—Ä–æ–µ–Ω–æ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö (db.js)\n- ‚úÖ –°–æ–∑–¥–∞–Ω —Å–∫—Ä–∏–ø—Ç seed.js –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è –¥–µ–º–æ-–¥–∞–Ω–Ω—ã–º–∏\n- ‚úÖ –ù–∞—Å—Ç—Ä–æ–µ–Ω express-mysql-session –¥–ª—è —Å–µ—Å—Å–∏–π\n\n### 2. –ë–µ–∫–µ–Ω–¥: TypeScript ‚Üí JavaScript\n- ‚úÖ –ü–æ–ª–Ω–æ—Å—Ç—å—é –ø–µ—Ä–µ–ø–∏—Å–∞–Ω server/index.ts ‚Üí server-new/index.js\n- ‚úÖ –í—Å–µ API routes –∏–∑ server/routes.ts ‚Üí server-new/routes.js\n- ‚úÖ –°–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤—Å–µ endpoints:\n  - Auth (—Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è, –≤—Ö–æ–¥, –≤—ã—Ö–æ–¥, –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å–µ—Å—Å–∏–∏)\n  - Users (–ø–æ–ª—É—á–µ–Ω–∏–µ, –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ)\n  - Psychologists (–ø–æ–∏—Å–∫, –ø–æ–ª—É—á–µ–Ω–∏–µ, –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ, –æ–¥–æ–±—Ä–µ–Ω–∏–µ)\n  - Appointments (—Å–æ–∑–¥–∞–Ω–∏–µ, –ø–æ–ª—É—á–µ–Ω–∏–µ –ø–æ –∫–ª–∏–µ–Ω—Ç—É/–ø—Å–∏—Ö–æ–ª–æ–≥—É, –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ)\n  - Reviews (—Å–æ–∑–¥–∞–Ω–∏–µ, –ø–æ–ª—É—á–µ–Ω–∏–µ)\n  - Admin (—Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞, –º–æ–¥–µ—Ä–∞—Ü–∏—è)\n\n### 3. –§—Ä–æ–Ω—Ç–µ–Ω–¥: React ‚Üí Vanilla HTML/CSS/JS\n\n#### –°–æ–∑–¥–∞–Ω–Ω—ã–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã (9 HTML —Ñ–∞–π–ª–æ–≤):\n1. ‚úÖ **index.html** - –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ —Å –ø–æ–∏—Å–∫–æ–º –ø—Å–∏—Ö–æ–ª–æ–≥–æ–≤\n2. ‚úÖ **login.html** - –í—Ö–æ–¥ –∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è (—Ç–∞–±—ã)\n3. ‚úÖ **client-dashboard.html** - –õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç –∫–ª–∏–µ–Ω—Ç–∞\n4. ‚úÖ **psychologist-dashboard.html** - –ö–∞–±–∏–Ω–µ—Ç –ø—Å–∏—Ö–æ–ª–æ–≥–∞ (–∑–∞–ø–∏—Å–∏, —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ, –æ—Ç–∑—ã–≤—ã)\n5. ‚úÖ **admin-dashboard.html** - –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å (–º–æ–¥–µ—Ä–∞—Ü–∏—è, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏, —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞)\n6. ‚úÖ **psychologist-profile.html** - –ü—Ä–æ—Ñ–∏–ª—å –ø—Å–∏—Ö–æ–ª–æ–≥–∞ —Å —Ñ–æ—Ä–º–æ–π –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è\n7. ‚úÖ **edit-profile.html** - –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è (–¥–ª—è –≤—Å–µ—Ö —Ä–æ–ª–µ–π)\n8. ‚úÖ **consultation.html** - –°—Ç—Ä–∞–Ω–∏—Ü–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏ (–≤–∏–¥–µ–æ/–∞—É–¥–∏–æ/—á–∞—Ç)\n9. ‚úÖ **leave-review.html** - –§–æ—Ä–º–∞ –æ—Å—Ç–∞–≤–ª–µ–Ω–∏—è –æ—Ç–∑—ã–≤–∞\n\n#### CSS –∏ JavaScript –º–æ–¥—É–ª–∏:\n- ‚úÖ **styles.css** - –ü–æ–ª–Ω–∞—è –¥–∏–∑–∞–π–Ω-—Å–∏—Å—Ç–µ–º–∞:\n  - CSS –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è —Ü–≤–µ—Ç–æ–≤, —à—Ä–∏—Ñ—Ç–æ–≤, –æ—Ç—Å—Ç—É–ø–æ–≤\n  - –£—Ç–∏–ª–∏—Ç–∞—Ä–Ω—ã–µ –∫–ª–∞—Å—Å—ã (flex, grid, margin, padding)\n  - –ö–æ–º–ø–æ–Ω–µ–Ω—Ç—ã (–∫–Ω–æ–ø–∫–∏, –∫–∞—Ä—Ç–æ—á–∫–∏, —Ñ–æ—Ä–º—ã, –º–æ–¥–∞–ª—å–Ω—ã–µ –æ–∫–Ω–∞, —Ç–∞–±—ã)\n  - –ê–¥–∞–ø—Ç–∏–≤–Ω–∞—è —Å–µ—Ç–∫–∞ (grid-cols-2, grid-cols-3)\n  \n- ‚úÖ **api.js** - API –∫–ª–∏–µ–Ω—Ç:\n  - Fetch wrapper —Å –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –æ—à–∏–±–æ–∫\n  - –ú–µ—Ç–æ–¥—ã –¥–ª—è –≤—Å–µ—Ö endpoints\n  - –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ JSON\n  \n- ‚úÖ **auth.js** - –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è:\n  - –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏\n  - –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ —Ä–æ–ª—è–º\n  - –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è\n  - requireAuth() –¥–ª—è –∑–∞—â–∏—â–µ–Ω–Ω—ã—Ö —Å—Ç—Ä–∞–Ω–∏—Ü\n\n### 4. –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è\n\n1. ‚úÖ **README_NEW.md** - –ü–æ–ª–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞\n2. ‚úÖ **QUICK_START.md** - –ó–∞–ø—É—Å–∫ –∑–∞ 5 –º–∏–Ω—É—Ç\n3. ‚úÖ **DEPLOYMENT_REG_RU.md** - –î–µ—Ç–∞–ª—å–Ω–∞—è –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ –¥–µ–ø–ª–æ—é –Ω–∞ —Ä–µ–≥.—Ä—É\n4. ‚úÖ **MIGRATION_STATUS.md** - –°—Ç–∞—Ç—É—Å –º–∏–≥—Ä–∞—Ü–∏–∏\n5. ‚úÖ **package-new.json** - –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –¥–ª—è –Ω–æ–≤–æ–π –≤–µ—Ä—Å–∏–∏\n6. ‚úÖ **.env.example** - –ü—Ä–∏–º–µ—Ä –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏\n\n## üìÅ –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –Ω–æ–≤–æ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞\n\n```\nproject/\n‚îú‚îÄ‚îÄ server/                        # –ë–µ–∫–µ–Ω–¥ (MySQL + JavaScript)\n‚îÇ   ‚îú‚îÄ‚îÄ index.js                  # Express —Å–µ—Ä–≤–µ—Ä\n‚îÇ   ‚îú‚îÄ‚îÄ routes.js                 # API endpoints (auth, users, psychologists, etc.)\n‚îÇ   ‚îú‚îÄ‚îÄ storage.js                # MySQL storage layer (16KB)\n‚îÇ   ‚îú‚îÄ‚îÄ db.js                     # Database connection\n‚îÇ   ‚îú‚îÄ‚îÄ schema.sql                # MySQL schema (8 —Ç–∞–±–ª–∏—Ü)\n‚îÇ   ‚îî‚îÄ‚îÄ seed.js                   # Demo data seeding script\n‚îÇ\n‚îú‚îÄ‚îÄ public/                        # –§—Ä–æ–Ω—Ç–µ–Ω–¥ (Vanilla HTML/CSS/JS)\n‚îÇ   ‚îú‚îÄ‚îÄ css/\n‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ styles.css            # –î–∏–∑–∞–π–Ω-—Å–∏—Å—Ç–µ–º–∞ (9.7KB)\n‚îÇ   ‚îú‚îÄ‚îÄ js/\n‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ api.js                # API –∫–ª–∏–µ–Ω—Ç (3.7KB)\n‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ auth.js               # –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è (2.2KB)\n‚îÇ   ‚îú‚îÄ‚îÄ index.html                # –ì–ª–∞–≤–Ω–∞—è (–ø–æ–∏—Å–∫ –ø—Å–∏—Ö–æ–ª–æ–≥–æ–≤)\n‚îÇ   ‚îú‚îÄ‚îÄ login.html                # –í—Ö–æ–¥/—Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è\n‚îÇ   ‚îú‚îÄ‚îÄ client-dashboard.html     # –ö–∞–±–∏–Ω–µ—Ç –∫–ª–∏–µ–Ω—Ç–∞\n‚îÇ   ‚îú‚îÄ‚îÄ psychologist-dashboard.html  # –ö–∞–±–∏–Ω–µ—Ç –ø—Å–∏—Ö–æ–ª–æ–≥–∞\n‚îÇ   ‚îú‚îÄ‚îÄ admin-dashboard.html      # –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å\n‚îÇ   ‚îú‚îÄ‚îÄ psychologist-profile.html # –ü—Ä–æ—Ñ–∏–ª—å –ø—Å–∏—Ö–æ–ª–æ–≥–∞\n‚îÇ   ‚îú‚îÄ‚îÄ edit-profile.html         # –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è\n‚îÇ   ‚îú‚îÄ‚îÄ consultation.html         # –ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è\n‚îÇ   ‚îî‚îÄ‚îÄ leave-review.html         # –û—Ç–∑—ã–≤\n‚îÇ\n‚îú‚îÄ‚îÄ QUICK_START.md                # –ë—ã—Å—Ç—Ä—ã–π —Å—Ç–∞—Ä—Ç\n‚îú‚îÄ‚îÄ README_NEW.md                 # –ü–æ–ª–Ω–∞—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è\n‚îú‚îÄ‚îÄ DEPLOYMENT_REG_RU.md          # –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ –¥–µ–ø–ª–æ—é\n‚îú‚îÄ‚îÄ MIGRATION_STATUS.md           # –°—Ç–∞—Ç—É—Å –º–∏–≥—Ä–∞—Ü–∏–∏\n‚îú‚îÄ‚îÄ package-new.json              # npm –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏\n‚îî‚îÄ‚îÄ .env.example                  # –ü—Ä–∏–º–µ—Ä –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏\n```\n\n## üéØ –§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å\n\n### –î–ª—è –∫–ª–∏–µ–Ω—Ç–æ–≤ ‚úÖ\n- –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –∏ –≤—Ö–æ–¥ –≤ —Å–∏—Å—Ç–µ–º—É\n- –ü–æ–∏—Å–∫ –ø—Å–∏—Ö–æ–ª–æ–≥–æ–≤ —Å —Ñ–∏–ª—å—Ç—Ä–∞–º–∏ (—Å–ø–µ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è, –æ–ø—ã—Ç, —Ü–µ–Ω–∞)\n- –ü—Ä–æ—Å–º–æ—Ç—Ä –ø—Ä–æ—Ñ–∏–ª–µ–π –ø—Å–∏—Ö–æ–ª–æ–≥–æ–≤\n- –ë—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–π (–¥–∞—Ç–∞, –≤—Ä–µ–º—è, —Ñ–æ—Ä–º–∞—Ç)\n- –ü—Ä–æ—Å–º–æ—Ç—Ä —Å–≤–æ–∏—Ö –∑–∞–ø–∏—Å–µ–π (–ø—Ä–µ–¥—Å—Ç–æ—è—â–∏–µ –∏ –ø—Ä–æ—à–µ–¥—à–∏–µ)\n- –û—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –æ—Ç–∑—ã–≤–æ–≤ –ø–æ—Å–ª–µ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏\n\n### –î–ª—è –ø—Å–∏—Ö–æ–ª–æ–≥–æ–≤ ‚úÖ\n- –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —Å –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π\n- –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª–µ–º (—Å–ø–µ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è, –æ–ø—ã—Ç, –æ–ø–∏—Å–∞–Ω–∏–µ, —Ü–µ–Ω–∞)\n- –ü—Ä–æ—Å–º–æ—Ç—Ä –∑–∞–ø–∏—Å–µ–π –∫–ª–∏–µ–Ω—Ç–æ–≤\n- –ü—Ä–æ—Å–º–æ—Ç—Ä –ø–æ–ª—É—á–µ–Ω–Ω—ã—Ö –æ—Ç–∑—ã–≤–æ–≤\n- –°—Ç—Ä–∞–Ω–∏—Ü–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏ (—á–∞—Ç, –∑–∞–≥–æ—Ç–æ–≤–∫–∞ –ø–æ–¥ –≤–∏–¥–µ–æ/–∞—É–¥–∏–æ)\n\n### –î–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤ ‚úÖ\n- –ú–æ–¥–µ—Ä–∞—Ü–∏—è –ø—Å–∏—Ö–æ–ª–æ–≥–æ–≤ (–æ–¥–æ–±—Ä–µ–Ω–∏–µ/–æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ)\n- –ü—Ä–æ—Å–º–æ—Ç—Ä –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π\n- –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã (–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏, –ø—Å–∏—Ö–æ–ª–æ–≥–∏, –Ω–∞ –º–æ–¥–µ—Ä–∞—Ü–∏–∏)\n\n## üöÄ –ö–∞–∫ –∑–∞–ø—É—Å—Ç–∏—Ç—å\n\n### –í–∞—Ä–∏–∞–Ω—Ç 1: –õ–æ–∫–∞–ª—å–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ (—Ç—Ä–µ–±—É–µ—Ç MySQL)\n\n```bash\n# 1. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏\nnpm install express express-session express-mysql-session mysql2 bcrypt\n\n# 2. –°–æ–∑–¥–∞–π—Ç–µ .env —Ñ–∞–π–ª\ncp .env.example .env\n# –û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ .env —Å –≤–∞—à–∏–º–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏ MySQL\n\n# 3. –°–æ–∑–¥–∞–π—Ç–µ —Ç–∞–±–ª–∏—Ü—ã –∏ –¥–µ–º–æ-–¥–∞–Ω–Ω—ã–µ\ncd server-new\nnode seed.js\n\n# 4. –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–µ—Ä–≤–µ—Ä\nnode index.js\n```\n\n–û—Ç–∫—Ä–æ–π—Ç–µ `http://localhost:5000`\n\n### –í–∞—Ä–∏–∞–Ω—Ç 2: –î–µ–ø–ª–æ–π –Ω–∞ —Ä–µ–≥.—Ä—É\n\n–°–ª–µ–¥—É–π—Ç–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º –≤ —Ñ–∞–π–ª–µ **DEPLOYMENT_REG_RU.md**\n\n–ö—Ä–∞—Ç–∫–∏–µ —à–∞–≥–∏:\n1. –°–æ–∑–¥–∞–π—Ç–µ MySQL –±–∞–∑—É –≤ phpMyAdmin\n2. –ó–∞–≥—Ä—É–∑–∏—Ç–µ —Ñ–∞–π–ª—ã —á–µ—Ä–µ–∑ FTP\n3. –í—ã–ø–æ–ª–Ω–∏—Ç–µ schema.sql –∏ seed.js\n4. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ .env —Å credentials —Ä–µ–≥.—Ä—É\n5. –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–µ—Ä–≤–µ—Ä\n\n## üîë –î–µ–º–æ-–∞–∫–∫–∞—É–Ω—Ç—ã\n\n–ü–æ—Å–ª–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è `seed.js`:\n\n| –†–æ–ª—å | Email | –ü–∞—Ä–æ–ª—å |\n|------|-------|--------|\n| **–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä** | admin@psychplatform.com | admin123 |\n| **–ü—Å–∏—Ö–æ–ª–æ–≥** | anna.petrova@psychplatform.com | psychologist123 |\n| **–ü—Å–∏—Ö–æ–ª–æ–≥** | mikhail.sidorov@psychplatform.com | psychologist123 |\n| **–ö–ª–∏–µ–Ω—Ç** | maria.ivanova@example.com | client123 |\n\n## üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –º–∏–≥—Ä–∞—Ü–∏–∏\n\n- **–§–∞–π–ª–æ–≤ —Å–æ–∑–¥–∞–Ω–æ:** 20+\n- **–°—Ç—Ä–æ–∫ –∫–æ–¥–∞ (–Ω–æ–≤—ã–π –±–µ–∫–µ–Ω–¥):** ~1,500\n- **–°—Ç—Ä–æ–∫ –∫–æ–¥–∞ (—Ñ—Ä–æ–Ω—Ç–µ–Ω–¥):** ~2,500\n- **HTML —Å—Ç—Ä–∞–Ω–∏—Ü:** 9\n- **API endpoints:** 20+\n- **–¢–∞–±–ª–∏—Ü –ë–î:** 8\n\n## ‚ö†Ô∏è –ß—Ç–æ —Ç—Ä–µ–±—É–µ—Ç –≤–Ω–∏–º–∞–Ω–∏—è\n\n### –î–ª—è –ø–æ–ª–Ω–æ—Ü–µ–Ω–Ω–æ–π —Ä–∞–±–æ—Ç—ã:\n\n1. **MySQL –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö** - Replit –Ω–µ –∏–º–µ–µ—Ç MySQL –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é\n   - –†–µ—à–µ–Ω–∏–µ: –†–∞–∑–≤–µ—Ä–Ω—É—Ç—å –Ω–∞ —Ä–µ–≥.—Ä—É –∏–ª–∏ –¥—Ä—É–≥–æ–º —Ö–æ—Å—Ç–∏–Ω–≥–µ —Å MySQL\n\n2. **WebRTC –¥–ª—è –≤–∏–¥–µ–æ/–∞—É–¥–∏–æ** - –ë–∞–∑–æ–≤–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ —Å–æ–∑–¥–∞–Ω–∞, –Ω–æ WebRTC –Ω–µ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω\n   - –†–µ—à–µ–Ω–∏–µ: –î–æ–±–∞–≤–∏—Ç—å Socket.io + WebRTC –ø–æ–∑–∂–µ\n\n3. **–ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–∞–π–ª–æ–≤** - –ù–µ—Ç –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∞–≤–∞—Ç–∞—Ä–æ–≤ –∏ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤\n   - –†–µ—à–µ–Ω–∏–µ: –î–æ–±–∞–≤–∏—Ç—å multer –∏–ª–∏ –¥—Ä—É–≥—É—é –±–∏–±–ª–∏–æ—Ç–µ–∫—É\n\n## üéì –ß—Ç–æ –∏–∑–º–µ–Ω–∏–ª–æ—Å—å –æ—Ç –æ—Ä–∏–≥–∏–Ω–∞–ª–∞\n\n### –°–æ—Ö—Ä–∞–Ω–µ–Ω–æ:\n- ‚úÖ –í—Å—è –±–∏–∑–Ω–µ—Å-–ª–æ–≥–∏–∫–∞\n- ‚úÖ –í—Å–µ API endpoints\n- ‚úÖ –°—Ö–µ–º–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö (–∞–¥–∞–ø—Ç–∏—Ä–æ–≤–∞–Ω–∞ –¥–ª—è MySQL)\n- ‚úÖ –†–æ–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π (client, psychologist, admin)\n- ‚úÖ –§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å –ø–æ–∏—Å–∫–∞, –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è, –æ—Ç–∑—ã–≤–æ–≤\n\n### –ò–∑–º–µ–Ω–µ–Ω–æ:\n- ‚úÖ PostgreSQL ‚Üí MySQL\n- ‚úÖ Drizzle ORM ‚Üí –ß–∏—Å—Ç—ã–π mysql2\n- ‚úÖ TypeScript ‚Üí JavaScript\n- ‚úÖ React ‚Üí Vanilla HTML/CSS/JS\n- ‚úÖ Vite ‚Üí Express static serving\n- ‚úÖ React Router ‚Üí Multi-page app\n- ‚úÖ TanStack Query ‚Üí Fetch API\n- ‚úÖ shadcn/ui ‚Üí –ö–∞—Å—Ç–æ–º–Ω—ã–µ CSS –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã\n\n## üìù –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏\n\n1. **–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ:**\n   - –†–∞–∑–≤–µ—Ä–Ω—É—Ç—å –Ω–∞ MySQL —Å–µ—Ä–≤–µ—Ä–µ\n   - –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –≤—Å–µ —Ä–æ–ª–∏\n   - –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –≤—Å–µ endpoints\n\n2. **–û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–µ —É–ª—É—á—à–µ–Ω–∏—è:**\n   - WebRTC –¥–ª—è –≤–∏–¥–µ–æ/–∞—É–¥–∏–æ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–π\n   - –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ–º\n   - –ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–∞–π–ª–æ–≤ (–∞–≤–∞—Ç–∞—Ä—ã, —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã)\n   - –°–∏—Å—Ç–µ–º–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π\n   - –ü–ª–∞—Ç–µ–∂–Ω–∞—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è\n\n3. **–ü—Ä–æ–¥–∞–∫—à–µ–Ω:**\n   - –†–∞–∑–≤–µ—Ä–Ω—É—Ç—å –Ω–∞ —Ä–µ–≥.—Ä—É\n   - –ù–∞—Å—Ç—Ä–æ–∏—Ç—å HTTPS (SSL)\n   - –ù–∞—Å—Ç—Ä–æ–∏—Ç—å –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ\n   - –ù–∞—Å—Ç—Ä–æ–∏—Ç—å –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥\n\n## üéâ –ò—Ç–æ–≥\n\n–ú–∏–≥—Ä–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∞! –°–æ–∑–¥–∞–Ω–∞ –ø–æ–ª–Ω–æ—Å—Ç—å—é —Ä–∞–±–æ—á–∞—è –≤–µ—Ä—Å–∏—è PsychPlatform –Ω–∞ —Å—Ç–µ–∫–µ **MySQL + Vanilla JS**, –≥–æ—Ç–æ–≤–∞—è –∫ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—é –Ω–∞ **—Ä–µ–≥.—Ä—É** –∏–ª–∏ –ª—é–±–æ–º –¥—Ä—É–≥–æ–º —Ö–æ—Å—Ç–∏–Ω–≥–µ —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π **Node.js** –∏ **MySQL**.\n\n–í—Å–µ –æ—Å–Ω–æ–≤–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –∏ —Ä–∞–±–æ—Ç–∞—é—Ç. –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –≥–æ—Ç–æ–≤–æ –∫ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—é –∏ –¥–µ–ø–ª–æ—é! üöÄ\n","size_bytes":11381},"README_NEW.md":{"content":"# PsychPlatform - –ù–æ–≤–∞—è –≤–µ—Ä—Å–∏—è (MySQL + Vanilla JS)\n\n## üéØ –û–ø–∏—Å–∞–Ω–∏–µ\n\n–ü–æ–ª–Ω–∞—è –º–∏–≥—Ä–∞—Ü–∏—è PsychPlatform —Å PostgreSQL –Ω–∞ MySQL –∏ —Å React –Ω–∞ —á–∏—Å—Ç—ã–π HTML/CSS/JavaScript.\n\n## üìã –ß—Ç–æ –∏–∑–º–µ–Ω–∏–ª–æ—Å—å\n\n### –ë–µ–∫–µ–Ω–¥\n- ‚úÖ PostgreSQL ‚Üí MySQL\n- ‚úÖ Drizzle ORM ‚Üí mysql2 —Å –∫–∞—Å—Ç–æ–º–Ω—ã–º storage —Å–ª–æ–µ–º\n- ‚úÖ TypeScript ‚Üí JavaScript\n- ‚úÖ Express-session ‚Üí Express-MySQL-Session\n- ‚úÖ –í—Å–µ API endpoints —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã\n\n### –§—Ä–æ–Ω—Ç–µ–Ω–¥\n- ‚úÖ React + TypeScript ‚Üí Vanilla HTML/CSS/JavaScript\n- ‚úÖ Vite ‚Üí –ù–µ—Ç —Å–±–æ—Ä—â–∏–∫–∞ (—á–∏—Å—Ç—ã–µ —Ñ–∞–π–ª—ã)\n- ‚úÖ Tailwind CSS ‚Üí –ö–∞—Å—Ç–æ–º–Ω–∞—è CSS –¥–∏–∑–∞–π–Ω-—Å–∏—Å—Ç–µ–º–∞\n- ‚úÖ React Router ‚Üí –ú–Ω–æ–≥–æ—Å—Ç—Ä–∞–Ω–∏—á–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ\n- ‚úÖ TanStack Query ‚Üí Fetch API\n- ‚úÖ shadcn/ui ‚Üí –ö–∞—Å—Ç–æ–º–Ω—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã\n\n## üöÄ –ó–∞–ø—É—Å–∫ –Ω–∞ Replit\n\n### 1. –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö\n\n–ï—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –≤–∞—à—É –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö –Ω–∞ —Ä–µ–≥.—Ä—É, —Å–æ–∑–¥–∞–π—Ç–µ —Ñ–∞–π–ª `.env`:\n\n```env\nDB_HOST=–≤–∞—à_—Ö–æ—Å—Ç_mysql\nDB_USER=u3105470_psyh_user\nDB_PASSWORD=xR3iA0zO0qwV9cF4\nDB_NAME=u3105470_psyh\nSESSION_SECRET=–≤–∞—à_—Å–µ–∫—Ä–µ—Ç–Ω—ã–π_–∫–ª—é—á\n```\n\n–ò–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –ª–æ–∫–∞–ª—å–Ω—É—é –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é).\n\n### 2. –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö\n\n```bash\ncd server\nnode seed.js\n```\n\n–≠—Ç–æ —Å–æ–∑–¥–∞—Å—Ç —Ç–∞–±–ª–∏—Ü—ã –∏ –∑–∞–ø–æ–ª–Ω–∏—Ç –¥–µ–º–æ-–¥–∞–Ω–Ω—ã–º–∏.\n\n### 3. –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞\n\n```bash\ncd server\nnode index.js\n```\n\n–°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—Å—Ç–∏—Ç—Å—è –Ω–∞ `http://0.0.0.0:5000`\n\n## üë• –î–µ–º–æ-–∞–∫–∫–∞—É–Ω—Ç—ã\n\n–ü–æ—Å–ª–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è `seed.js`:\n\n- **–ê–¥–º–∏–Ω:** admin@psychplatform.com / admin123\n- **–ü—Å–∏—Ö–æ–ª–æ–≥:** anna.petrova@psychplatform.com / psychologist123\n- **–ü—Å–∏—Ö–æ–ª–æ–≥:** mikhail.sidorov@psychplatform.com / psychologist123\n- **–ö–ª–∏–µ–Ω—Ç:** maria.ivanova@example.com / client123\n\n## üìÅ –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø—Ä–æ–µ–∫—Ç–∞\n\n```\n‚îú‚îÄ‚îÄ server/               # –ë–µ–∫–µ–Ω–¥\n‚îÇ   ‚îú‚îÄ‚îÄ index.js         # –ì–ª–∞–≤–Ω—ã–π —Ñ–∞–π–ª —Å–µ—Ä–≤–µ—Ä–∞\n‚îÇ   ‚îú‚îÄ‚îÄ routes.js        # API —Ä–æ—É—Ç—ã\n‚îÇ   ‚îú‚îÄ‚îÄ storage.js       # MySQL storage\n‚îÇ   ‚îú‚îÄ‚îÄ db.js            # –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ë–î\n‚îÇ   ‚îú‚îÄ‚îÄ schema.sql       # SQL —Å—Ö–µ–º–∞\n‚îÇ   ‚îî‚îÄ‚îÄ seed.js          # –ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–µ–º–æ-–¥–∞–Ω–Ω—ã–º–∏\n‚îÇ\n‚îú‚îÄ‚îÄ public/              # –§—Ä–æ–Ω—Ç–µ–Ω–¥ (—Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ñ–∞–π–ª—ã)\n‚îÇ   ‚îú‚îÄ‚îÄ css/\n‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ styles.css   # –î–∏–∑–∞–π–Ω-—Å–∏—Å—Ç–µ–º–∞\n‚îÇ   ‚îú‚îÄ‚îÄ js/\n‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ api.js       # API –∫–ª–∏–µ–Ω—Ç\n‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ auth.js      # –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è\n‚îÇ   ‚îú‚îÄ‚îÄ index.html       # –ì–ª–∞–≤–Ω–∞—è (–ø–æ–∏—Å–∫)\n‚îÇ   ‚îú‚îÄ‚îÄ login.html       # –í—Ö–æ–¥/—Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è\n‚îÇ   ‚îú‚îÄ‚îÄ client-dashboard.html\n‚îÇ   ‚îú‚îÄ‚îÄ psychologist-dashboard.html\n‚îÇ   ‚îú‚îÄ‚îÄ admin-dashboard.html\n‚îÇ   ‚îú‚îÄ‚îÄ psychologist-profile.html\n‚îÇ   ‚îú‚îÄ‚îÄ edit-profile.html\n‚îÇ   ‚îî‚îÄ‚îÄ consultation.html\n‚îÇ\n‚îú‚îÄ‚îÄ MIGRATION_STATUS.md  # –°—Ç–∞—Ç—É—Å –º–∏–≥—Ä–∞—Ü–∏–∏\n‚îî‚îÄ‚îÄ README_NEW.md        # –≠—Ç–æ—Ç —Ñ–∞–π–ª\n```\n\n## üé® –§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª\n\n### –î–ª—è –∫–ª–∏–µ–Ω—Ç–æ–≤\n- ‚úÖ –ü–æ–∏—Å–∫ –ø—Å–∏—Ö–æ–ª–æ–≥–æ–≤ –ø–æ —Ñ–∏–ª—å—Ç—Ä–∞–º\n- ‚úÖ –ü—Ä–æ—Å–º–æ—Ç—Ä –ø—Ä–æ—Ñ–∏–ª–µ–π –ø—Å–∏—Ö–æ–ª–æ–≥–æ–≤\n- ‚úÖ –ë—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–π\n- ‚úÖ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞–ø–∏—Å—è–º–∏\n- ‚úÖ –ü—Ä–æ—Å–º–æ—Ç—Ä –∏—Å—Ç–æ—Ä–∏–∏\n- üîÑ –û—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –æ—Ç–∑—ã–≤–æ–≤ (–≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ)\n\n### –î–ª—è –ø—Å–∏—Ö–æ–ª–æ–≥–æ–≤\n- ‚úÖ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª–µ–º\n- ‚úÖ –ü—Ä–æ—Å–º–æ—Ç—Ä –∑–∞–ø–∏—Å–µ–π\n- ‚úÖ –ü—Ä–æ—Å–º–æ—Ç—Ä –æ—Ç–∑—ã–≤–æ–≤\n- üîÑ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ–º (–≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ)\n- üîÑ –í–∏–¥–µ–æ/–∞—É–¥–∏–æ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏ (–≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ)\n\n### –î–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤\n- ‚úÖ –ú–æ–¥–µ—Ä–∞—Ü–∏—è –ø—Å–∏—Ö–æ–ª–æ–≥–æ–≤\n- ‚úÖ –ü—Ä–æ—Å–º–æ—Ç—Ä –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π\n- ‚úÖ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã\n\n## üîß API Endpoints\n\n–í—Å–µ API endpoints —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –∏–∑ –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–π –≤–µ—Ä—Å–∏–∏:\n\n### Auth\n- `POST /api/auth/register` - –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è\n- `POST /api/auth/login` - –í—Ö–æ–¥\n- `GET /api/auth/me` - –¢–µ–∫—É—â–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å\n- `POST /api/auth/logout` - –í—ã—Ö–æ–¥\n\n### Users\n- `GET /api/users/:id` - –ü–æ–ª—É—á–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è\n- `PUT /api/users/:id` - –û–±–Ω–æ–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è\n\n### Psychologists\n- `GET /api/psychologists/search` - –ü–æ–∏—Å–∫ –ø—Å–∏—Ö–æ–ª–æ–≥–æ–≤\n- `GET /api/psychologists/:id` - –ü–æ–ª—É—á–∏—Ç—å –ø—Å–∏—Ö–æ–ª–æ–≥–∞\n- `GET /api/psychologists/user/:userId` - –ü–æ–ª—É—á–∏—Ç—å –ø–æ userId\n- `PUT /api/psychologists/:id` - –û–±–Ω–æ–≤–∏—Ç—å –ø—Å–∏—Ö–æ–ª–æ–≥–∞\n\n### Appointments\n- `POST /api/appointments` - –°–æ–∑–¥–∞—Ç—å –∑–∞–ø–∏—Å—å\n- `GET /api/appointments/client/:clientId` - –ó–∞–ø–∏—Å–∏ –∫–ª–∏–µ–Ω—Ç–∞\n- `GET /api/appointments/psychologist/:psychologistId` - –ó–∞–ø–∏—Å–∏ –ø—Å–∏—Ö–æ–ª–æ–≥–∞\n- `PUT /api/appointments/:id` - –û–±–Ω–æ–≤–∏—Ç—å –∑–∞–ø–∏—Å—å\n\n### Reviews\n- `POST /api/reviews` - –°–æ–∑–¥–∞—Ç—å –æ—Ç–∑—ã–≤\n- `GET /api/reviews/psychologist/:psychologistId` - –û—Ç–∑—ã–≤—ã –ø—Å–∏—Ö–æ–ª–æ–≥–∞\n\n### Admin\n- `GET /api/admin/users` - –í—Å–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏\n- `GET /api/admin/psychologists/pending` - –ù–∞ –º–æ–¥–µ—Ä–∞—Ü–∏–∏\n- `PUT /api/admin/psychologists/:id/approve` - –û–¥–æ–±—Ä–∏—Ç—å\n- `DELETE /api/admin/psychologists/:id/reject` - –û—Ç–∫–ª–æ–Ω–∏—Ç—å\n- `GET /api/admin/stats` - –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞\n\n## üåê –î–µ–ø–ª–æ–π –Ω–∞ —Ä–µ–≥.—Ä—É (—á–µ—Ä–µ–∑ FTP)\n\n–°–º. —Ñ–∞–π–ª `DEPLOYMENT_GUIDE.md` –¥–ª—è –¥–µ—Ç–∞–ª—å–Ω—ã—Ö –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–π.\n\n–ö—Ä–∞—Ç–∫–∏–µ —à–∞–≥–∏:\n1. –°–æ–∑–¥–∞–π—Ç–µ MySQL –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö –≤ –ø–∞–Ω–µ–ª–∏ —Ä–µ–≥.—Ä—É\n2. –ó–∞–≥—Ä—É–∑–∏—Ç–µ —Ñ–∞–π–ª—ã —á–µ—Ä–µ–∑ FTP\n3. –í—ã–ø–æ–ª–Ω–∏—Ç–µ `schema.sql` –∏ `seed.js` –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ\n4. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è\n5. –ó–∞–ø—É—Å—Ç–∏—Ç–µ `node index.js` —á–µ—Ä–µ–∑ SSH –∏–ª–∏ –ø–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è\n\n## ‚ùì FAQ\n\n**Q: –ú–æ–∂–Ω–æ –ª–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å phpMyAdmin?**  \nA: –î–∞! phpMyAdmin - —ç—Ç–æ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è MySQL –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö. –û–Ω —É–∂–µ –¥–æ—Å—Ç—É–ø–µ–Ω –≤ –ø–∞–Ω–µ–ª–∏ —Ä–µ–≥.—Ä—É.\n\n**Q: –ù—É–∂–µ–Ω –ª–∏ Node.js –Ω–∞ —Ö–æ—Å—Ç–∏–Ω–≥–µ?**  \nA: –î–∞, –¥–ª—è —Ä–∞–±–æ—Ç—ã –±–µ–∫–µ–Ω–¥–∞ –Ω—É–∂–µ–Ω Node.js. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –ª–∏ –≤–∞—à —Ö–æ—Å—Ç–∏–Ω–≥ Node.js.\n\n**Q: –ö–∞–∫ –º–∏–≥—Ä–∏—Ä–æ–≤–∞—Ç—å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –¥–∞–Ω–Ω—ã–µ?**  \nA: –î–∞–Ω–Ω—ã–µ –∏–∑ —Å—Ç–∞—Ä–æ–π PostgreSQL –±–∞–∑—ã –Ω—É–∂–Ω–æ —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –≤ SQL, –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞—Ç—å –¥–ª—è MySQL –∏ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å. –ü–æ–¥—Ä–æ–±–Ω–µ–µ –≤ DEPLOYMENT_GUIDE.md.\n\n## üìù TODO\n\n- [ ] WebRTC –¥–ª—è –≤–∏–¥–µ–æ/–∞—É–¥–∏–æ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–π\n- [ ] –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ–º –ø—Å–∏—Ö–æ–ª–æ–≥–æ–≤\n- [ ] –ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–∞–π–ª–æ–≤ (–∞–≤–∞—Ç–∞—Ä—ã, —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã)\n- [ ] –°–∏—Å—Ç–µ–º–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π\n- [ ] –ü–ª–∞—Ç–µ–∂–∏\n\n## üìÑ –õ–∏—Ü–µ–Ω–∑–∏—è\n\nMIT\n","size_bytes":7293},"server-new/index.js":{"content":"// PsychPlatform Server - JavaScript Version\nconst express = require('express');\nconst session = require('express-session');\nconst MySQLStore = require('express-mysql-session')(session);\nconst path = require('path');\n\nconst app = express();\n\n// Middleware\napp.use(express.json());\napp.use(express.urlencoded({ extended: false }));\n\n// Try to import database modules, fallback to demo mode\nlet pool, testConnection, initDatabase, registerRoutes;\nlet DEMO_MODE = false;\n\ntry {\n  const db = require('./db');\n  pool = db.pool;\n  testConnection = db.testConnection;\n  initDatabase = db.initDatabase;\n  const routes = require('./routes');\n  registerRoutes = routes.registerRoutes;\n} catch (error) {\n  console.warn('‚ö† Database modules not available, running in DEMO mode');\n  DEMO_MODE = true;\n}\n\n// Session middleware - use memory store in demo mode\nif (DEMO_MODE) {\n  app.use(session({\n    secret: process.env.SESSION_SECRET || 'demo-secret-key',\n    resave: false,\n    saveUninitialized: false,\n    cookie: {\n      secure: false,\n      httpOnly: true,\n      maxAge: 24 * 60 * 60 * 1000 // 24 hours\n    }\n  }));\n} else {\n  // MySQL Session Store\n  const sessionStore = new MySQLStore({\n    clearExpired: true,\n    checkExpirationInterval: 900000, // 15 minutes\n    expiration: 86400000, // 24 hours\n    createDatabaseTable: true,\n    schema: {\n      tableName: 'sessions',\n      columnNames: {\n        session_id: 'session_id',\n        expires: 'expires',\n        data: 'data'\n      }\n    }\n  }, pool);\n\n  app.use(session({\n    key: 'session_id',\n    secret: process.env.SESSION_SECRET || 'your-secret-key-change-in-production',\n    store: sessionStore,\n    resave: false,\n    saveUninitialized: false,\n    cookie: {\n      secure: false, // Set to true in production with HTTPS\n      httpOnly: true,\n      maxAge: 24 * 60 * 60 * 1000 // 24 hours\n    }\n  }));\n}\n\n// Request logging middleware\napp.use((req, res, next) => {\n  const start = Date.now();\n  const path = req.path;\n  \n  res.on('finish', () => {\n    const duration = Date.now() - start;\n    if (path.startsWith('/api')) {\n      console.log(`${req.method} ${path} ${res.statusCode} in ${duration}ms`);\n    }\n  });\n  \n  next();\n});\n\n// Initialize database and routes\nasync function startServer() {\n  try {\n    console.log('\\n=== Starting PsychPlatform Server ===\\n');\n    \n    if (DEMO_MODE) {\n      console.log('‚ö† RUNNING IN DEMO MODE (No Database)');\n      console.log('‚Ñπ This is a static preview of the interface');\n      console.log('‚Ñπ To enable full functionality, deploy to a MySQL server');\n      console.log('‚Ñπ See DEPLOYMENT_REG_RU.md for instructions\\n');\n    } else {\n      // Test database connection\n      const connected = await testConnection();\n      if (!connected) {\n        console.log('\\n‚ö† MySQL not available, switching to DEMO mode');\n        console.log('‚Ñπ Static pages will be served, but API will not work');\n        console.log('‚Ñπ To enable full functionality, deploy to a MySQL server\\n');\n        DEMO_MODE = true;\n      } else {\n        // Initialize database schema\n        await initDatabase();\n        \n        // Register API routes\n        registerRoutes(app);\n      }\n    }\n    \n    // Serve static files from public directory\n    app.use(express.static(path.join(__dirname, '../public')));\n    \n    // Catch-all route - serve index.html for SPA routing\n    app.get('*', (req, res) => {\n      if (!req.path.startsWith('/api')) {\n        res.sendFile(path.join(__dirname, '../public/index.html'));\n      } else if (DEMO_MODE) {\n        // In demo mode, return informative error for API calls\n        res.status(503).json({ \n          error: 'Demo mode: Database not available', \n          message: 'Deploy to a MySQL server for full functionality. See DEPLOYMENT_REG_RU.md' \n        });\n      }\n    });\n    \n    // Error handling middleware\n    app.use((err, req, res, next) => {\n      const status = err.status || err.statusCode || 500;\n      const message = err.message || 'Internal Server Error';\n      \n      console.error('Error:', message);\n      res.status(status).json({ error: message });\n    });\n    \n    // Start server\n    const port = parseInt(process.env.PORT || '5000', 10);\n    app.listen(port, '0.0.0.0', () => {\n      console.log(`‚úì Server running on http://0.0.0.0:${port}`);\n      console.log(`‚úì Public files served from /public`);\n      \n      if (DEMO_MODE) {\n        console.log('\\nüìÑ DEMO MODE - Static pages only');\n        console.log('   Open http://0.0.0.0:${port} to see the interface');\n        console.log('   Deploy to MySQL for full functionality');\n      } else {\n        console.log('\\n‚úì MySQL connected');\n        console.log('\\nDemo accounts:');\n        console.log('Admin:        admin@psychplatform.com / admin123');\n        console.log('Psychologist: anna.petrova@psychplatform.com / psychologist123');\n        console.log('Psychologist: mikhail.sidorov@psychplatform.com / psychologist123');\n        console.log('Client:       maria.ivanova@example.com / client123');\n      }\n      console.log('\\n');\n    });\n    \n  } catch (error) {\n    console.error('Failed to start server:', error);\n    process.exit(1);\n  }\n}\n\n// Start the server\nstartServer();\n","size_bytes":5201},"server-new/routes.js":{"content":"// API Routes\nconst bcrypt = require('bcrypt');\nconst { MySQLStorage } = require('./storage');\n\nconst storage = new MySQLStorage();\n\n// Simple validation helpers\nfunction validateEmail(email) {\n  return /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(email);\n}\n\nfunction validatePassword(password) {\n  return password && password.length >= 6;\n}\n\nfunction registerRoutes(app) {\n  \n  // ========== AUTH ROUTES ==========\n  \n  app.post('/api/auth/register', async (req, res) => {\n    try {\n      const { email, password, role, firstName, lastName } = req.body;\n      \n      // Validate input\n      if (!validateEmail(email)) {\n        return res.status(400).json({ error: 'Invalid email address' });\n      }\n      \n      if (!validatePassword(password)) {\n        return res.status(400).json({ error: 'Password must be at least 6 characters' });\n      }\n      \n      if (!['client', 'psychologist', 'admin'].includes(role)) {\n        return res.status(400).json({ error: 'Invalid role' });\n      }\n      \n      if (!firstName || !lastName) {\n        return res.status(400).json({ error: 'First name and last name are required' });\n      }\n      \n      // Check if user already exists\n      const existingUser = await storage.getUserByEmail(email);\n      if (existingUser) {\n        return res.status(400).json({ error: 'User already exists' });\n      }\n      \n      // Hash password\n      const hashedPassword = await bcrypt.hash(password, 10);\n      \n      const user = await storage.createUser({\n        email,\n        password: hashedPassword,\n        role,\n        firstName,\n        lastName,\n        avatar: req.body.avatar || null\n      });\n      \n      // If user is a psychologist, create psychologist profile\n      if (role === 'psychologist') {\n        await storage.createPsychologist({\n          userId: user.id,\n          specialization: '–ù–µ —É–∫–∞–∑–∞–Ω–∞',\n          experience: 0,\n          education: '–ù–µ —É–∫–∞–∑–∞–Ω–æ',\n          description: '–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –ø—Ä–æ—Ñ–∏–ª—å',\n          price: '0.00',\n          formats: ['video'],\n          certifications: []\n        });\n      }\n      \n      // Remove password from response\n      delete user.password;\n      res.status(201).json(user);\n    } catch (error) {\n      console.error('Registration error:', error);\n      res.status(500).json({ error: error.message });\n    }\n  });\n\n  app.post('/api/auth/login', async (req, res) => {\n    try {\n      const { email, password } = req.body;\n      \n      if (!email || !password) {\n        return res.status(400).json({ error: 'Email and password are required' });\n      }\n      \n      const user = await storage.getUserByEmail(email);\n      if (!user) {\n        return res.status(401).json({ error: 'Invalid credentials' });\n      }\n      \n      const isValid = await bcrypt.compare(password, user.password);\n      if (!isValid) {\n        return res.status(401).json({ error: 'Invalid credentials' });\n      }\n      \n      // Set user session\n      req.session.userId = user.id;\n      \n      // Remove password from response\n      const safeUser = { ...user };\n      delete safeUser.password;\n      res.json(safeUser);\n    } catch (error) {\n      console.error('Login error:', error);\n      res.status(500).json({ error: error.message });\n    }\n  });\n\n  app.get('/api/auth/me', async (req, res) => {\n    if (!req.session.userId) {\n      return res.status(401).json({ error: 'Not authenticated' });\n    }\n    \n    const user = await storage.getUser(req.session.userId);\n    if (!user) {\n      return res.status(404).json({ error: 'User not found' });\n    }\n    \n    delete user.password;\n    res.json(user);\n  });\n\n  app.post('/api/auth/logout', async (req, res) => {\n    req.session.destroy((err) => {\n      if (err) {\n        return res.status(500).json({ error: 'Could not log out' });\n      }\n      res.json({ message: 'Logged out successfully' });\n    });\n  });\n\n  // ========== USER ROUTES ==========\n  \n  app.get('/api/users/:id', async (req, res) => {\n    const user = await storage.getUser(req.params.id);\n    if (!user) {\n      return res.status(404).json({ error: 'User not found' });\n    }\n    \n    delete user.password;\n    res.json(user);\n  });\n\n  app.put('/api/users/:id', async (req, res) => {\n    const updates = req.body;\n    const user = await storage.updateUser(req.params.id, updates);\n    \n    if (!user) {\n      return res.status(404).json({ error: 'User not found' });\n    }\n    \n    delete user.password;\n    res.json(user);\n  });\n\n  // ========== PSYCHOLOGIST ROUTES ==========\n  \n  app.post('/api/psychologists', async (req, res) => {\n    try {\n      const psychologist = await storage.createPsychologist(req.body);\n      res.status(201).json(psychologist);\n    } catch (error) {\n      res.status(400).json({ error: error.message });\n    }\n  });\n\n  app.get('/api/psychologists/search', async (req, res) => {\n    const { specialization, minPrice, maxPrice, formats } = req.query;\n    \n    const filters = { isApproved: true };\n    \n    if (specialization) filters.specialization = specialization;\n    if (minPrice) filters.minPrice = parseFloat(minPrice);\n    if (maxPrice) filters.maxPrice = parseFloat(maxPrice);\n    if (formats) {\n      filters.formats = Array.isArray(formats) ? formats : [formats];\n    }\n    \n    const psychologists = await storage.searchPsychologists(filters);\n    res.json(psychologists);\n  });\n\n  app.get('/api/psychologists/:id', async (req, res) => {\n    const psychologist = await storage.getPsychologist(req.params.id);\n    if (!psychologist) {\n      return res.status(404).json({ error: 'Psychologist not found' });\n    }\n    \n    const user = await storage.getUser(psychologist.user_id || psychologist.userId);\n    res.json({ ...psychologist, user });\n  });\n\n  app.get('/api/psychologists/user/:userId', async (req, res) => {\n    const psychologist = await storage.getPsychologistByUserId(req.params.userId);\n    if (!psychologist) {\n      return res.status(404).json({ error: 'Psychologist profile not found' });\n    }\n    \n    const user = await storage.getUser(psychologist.user_id || psychologist.userId);\n    res.json({ ...psychologist, user });\n  });\n\n  app.put('/api/psychologists/:id', async (req, res) => {\n    const updates = req.body;\n    const psychologist = await storage.updatePsychologist(req.params.id, updates);\n    \n    if (!psychologist) {\n      return res.status(404).json({ error: 'Psychologist not found' });\n    }\n    \n    res.json(psychologist);\n  });\n\n  // ========== APPOINTMENT ROUTES ==========\n  \n  app.post('/api/appointments', async (req, res) => {\n    try {\n      const appointment = await storage.createAppointment(req.body);\n      res.status(201).json(appointment);\n    } catch (error) {\n      res.status(400).json({ error: error.message });\n    }\n  });\n\n  app.get('/api/appointments/client/:clientId', async (req, res) => {\n    const appointments = await storage.getAppointmentsByClient(req.params.clientId);\n    res.json(appointments);\n  });\n\n  app.get('/api/appointments/psychologist/:psychologistId', async (req, res) => {\n    const appointments = await storage.getAppointmentsByPsychologist(req.params.psychologistId);\n    res.json(appointments);\n  });\n\n  app.put('/api/appointments/:id', async (req, res) => {\n    const updates = req.body;\n    const appointment = await storage.updateAppointment(req.params.id, updates);\n    \n    if (!appointment) {\n      return res.status(404).json({ error: 'Appointment not found' });\n    }\n    \n    res.json(appointment);\n  });\n\n  // ========== REVIEW ROUTES ==========\n  \n  app.post('/api/reviews', async (req, res) => {\n    try {\n      const review = await storage.createReview(req.body);\n      res.status(201).json(review);\n    } catch (error) {\n      res.status(400).json({ error: error.message });\n    }\n  });\n\n  app.get('/api/reviews/psychologist/:psychologistId', async (req, res) => {\n    const reviews = await storage.getReviewsByPsychologist(req.params.psychologistId);\n    res.json(reviews);\n  });\n\n  // ========== MESSAGE ROUTES ==========\n  \n  app.post('/api/messages', async (req, res) => {\n    try {\n      const message = await storage.createMessage(req.body);\n      res.status(201).json(message);\n    } catch (error) {\n      res.status(400).json({ error: error.message });\n    }\n  });\n\n  app.get('/api/messages/:user1Id/:user2Id', async (req, res) => {\n    const messages = await storage.getMessagesBetween(req.params.user1Id, req.params.user2Id);\n    res.json(messages);\n  });\n\n  // ========== AVAILABILITY ROUTES ==========\n  \n  app.post('/api/availability', async (req, res) => {\n    try {\n      const availability = await storage.createAvailability(req.body);\n      res.status(201).json(availability);\n    } catch (error) {\n      res.status(400).json({ error: error.message });\n    }\n  });\n\n  app.get('/api/availability/psychologist/:psychologistId', async (req, res) => {\n    const availability = await storage.getAvailabilityByPsychologist(req.params.psychologistId);\n    res.json(availability);\n  });\n\n  // ========== ADMIN ROUTES ==========\n  \n  app.get('/api/admin/users', async (req, res) => {\n    const users = await storage.getAllUsers();\n    const safeUsers = users.map(user => {\n      const safe = { ...user };\n      delete safe.password;\n      return safe;\n    });\n    res.json(safeUsers);\n  });\n\n  app.get('/api/admin/psychologists/pending', async (req, res) => {\n    const pending = await storage.getPendingPsychologists();\n    res.json(pending);\n  });\n\n  app.put('/api/admin/psychologists/:id/approve', async (req, res) => {\n    await storage.approvePsychologist(req.params.id);\n    res.json({ success: true });\n  });\n\n  app.delete('/api/admin/psychologists/:id/reject', async (req, res) => {\n    try {\n      await storage.rejectPsychologist(req.params.id);\n      res.json({ success: true });\n    } catch (error) {\n      res.status(400).json({ error: 'Failed to reject psychologist' });\n    }\n  });\n\n  // ========== STATS ROUTES ==========\n  \n  app.get('/api/admin/stats', async (req, res) => {\n    try {\n      // Get all users and psychologists for stats\n      const users = await storage.getAllUsers();\n      const psychologists = await storage.searchPsychologists({ isApproved: true });\n      \n      const stats = {\n        totalUsers: users.length,\n        totalClients: users.filter(u => u.role === 'client').length,\n        totalPsychologists: psychologists.length,\n        pendingPsychologists: (await storage.getPendingPsychologists()).length\n      };\n      \n      res.json(stats);\n    } catch (error) {\n      res.status(500).json({ error: error.message });\n    }\n  });\n  \n  return app;\n}\n\nmodule.exports = { registerRoutes };\n","size_bytes":10607},"MIGRATION_STATUS.md":{"content":"# –°—Ç–∞—Ç—É—Å –º–∏–≥—Ä–∞—Ü–∏–∏ PsychPlatform\n\n## ‚úÖ –ó–∞–≤–µ—Ä—à–µ–Ω–Ω—ã–µ –∑–∞–¥–∞—á–∏\n\n### –ë–µ–∫–µ–Ω–¥ (MySQL + JavaScript)\n- ‚úÖ MySQL —Å—Ö–µ–º–∞ —Å–æ–∑–¥–∞–Ω–∞ (server-new/schema.sql)\n- ‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ë–î (server-new/db.js)\n- ‚úÖ Storage —Å–ª–æ–π –¥–ª—è MySQL (server-new/storage.js) \n- ‚úÖ –°–µ—Ä–≤–µ—Ä–Ω—ã–π —Ñ–∞–π–ª –Ω–∞ JavaScript (server-new/index.js)\n- ‚úÖ API —Ä–æ—É—Ç—ã –Ω–∞ JavaScript (server-new/routes.js)\n- ‚úÖ –°–∫—Ä–∏–ø—Ç –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è –¥–µ–º–æ-–¥–∞–Ω–Ω—ã–º–∏ (server-new/seed.js)\n- ‚úÖ Express-MySQL-Session –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–µ—Å—Å–∏–π\n\n### –§—Ä–æ–Ω—Ç–µ–Ω–¥ (HTML/CSS/JS)\n- ‚úÖ CSS –¥–∏–∑–∞–π–Ω-—Å–∏—Å—Ç–µ–º–∞ (public/css/styles.css)\n- ‚úÖ API –º–æ–¥—É–ª—å (public/js/api.js)\n- ‚úÖ Auth –º–æ–¥—É–ª—å (public/js/auth.js)\n- ‚úÖ –°—Ç—Ä–∞–Ω–∏—Ü–∞ –≤—Ö–æ–¥–∞/—Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ (public/login.html)\n- ‚úÖ –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –ø–æ–∏—Å–∫–∞ (public/index.html)\n- ‚úÖ –î–∞—à–±–æ—Ä–¥ –∫–ª–∏–µ–Ω—Ç–∞ (public/client-dashboard.html)\n\n## ‚úÖ –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–æ (22 –æ–∫—Ç—è–±—Ä—è 2025)\n- ‚úÖ –î–∞—à–±–æ—Ä–¥ –ø—Å–∏—Ö–æ–ª–æ–≥–∞ (psychologist-dashboard.html)\n- ‚úÖ –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å (admin-dashboard.html)\n- ‚úÖ –ü—Ä–æ—Ñ–∏–ª—å –ø—Å–∏—Ö–æ–ª–æ–≥–∞ —Å –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ–º (psychologist-profile.html)\n- ‚úÖ –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è (edit-profile.html)\n- ‚úÖ –°—Ç—Ä–∞–Ω–∏—Ü–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏ (consultation.html)\n- ‚úÖ –°—Ç—Ä–∞–Ω–∏—Ü–∞ –æ—Ç–∑—ã–≤–æ–≤ (leave-review.html)\n- ‚úÖ –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ –¥–µ–ø–ª–æ—é (DEPLOYMENT_REG_RU.md)\n- ‚úÖ README –¥–ª—è –Ω–æ–≤–æ–π –≤–µ—Ä—Å–∏–∏ (README_NEW.md)\n- ‚úÖ –ë—ã—Å—Ç—Ä—ã–π —Å—Ç–∞—Ä—Ç (QUICK_START.md)\n- ‚úÖ package-new.json –∏ .env.example\n\n## üìã –û—Å—Ç–∞–≤—à–∏–µ—Å—è –∑–∞–¥–∞—á–∏\n\n### –û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–µ —É–ª—É—á—à–µ–Ω–∏—è\n- ‚¨ú WebRTC –¥–ª—è –≤–∏–¥–µ–æ/–∞—É–¥–∏–æ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–π\n\n### –§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å\n- ‚¨ú UI –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã (–º–æ–¥–∞–ª—å–Ω—ã–µ –æ–∫–Ω–∞, —Ñ–æ—Ä–º—ã, —Ç–∞–±—ã)\n- ‚¨ú –°–∏—Å—Ç–µ–º–∞ –æ—Ç–∑—ã–≤–æ–≤\n- ‚¨ú –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ–º\n- ‚¨ú –í–∏–¥–µ–æ/–∞—É–¥–∏–æ/—á–∞—Ç –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏ (WebRTC)\n- ‚¨ú –ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–∞–π–ª–æ–≤ (–∞–≤–∞—Ç–∞—Ä—ã, —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã)\n\n### –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ\n- ‚¨ú –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Å–µ—Ö —Ñ—É–Ω–∫—Ü–∏–π –∫–ª–∏–µ–Ω—Ç–∞\n- ‚¨ú –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Å–µ—Ö —Ñ—É–Ω–∫—Ü–∏–π –ø—Å–∏—Ö–æ–ª–æ–≥–∞\n- ‚¨ú –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Å–µ—Ö —Ñ—É–Ω–∫—Ü–∏–π –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞\n\n### –î–µ–ø–ª–æ–π\n- ‚¨ú –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—é –Ω–∞ —Ä–µ–≥.—Ä—É\n- ‚¨ú –§–∏–Ω–∞–ª—å–Ω–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –¥–ª—è –ø—Ä–æ–¥–∞–∫—à–µ–Ω–∞\n\n## üéØ –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏\n\n1. –ó–∞–≤–µ—Ä—à–∏—Ç—å —Å–æ–∑–¥–∞–Ω–∏–µ –¥–∞—à–±–æ—Ä–¥–æ–≤ (–ø—Å–∏—Ö–æ–ª–æ–≥, –∞–¥–º–∏–Ω)\n2. –°–æ–∑–¥–∞—Ç—å –ø—Ä–æ—Ñ–∏–ª—å –ø—Å–∏—Ö–æ–ª–æ–≥–∞ –∏ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ\n3. –°–æ–∑–¥–∞—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è\n4. –†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –±–∞–∑–æ–≤—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏\n5. –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –≤—Å–µ —Ä–æ–ª–∏\n6. –ü–æ–¥–≥–æ—Ç–æ–≤–∏—Ç—å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é –ø–æ –¥–µ–ø–ª–æ—é\n\n## üìä –ü—Ä–æ–≥—Ä–µ—Å—Å: ~85%\n\n**–ë–µ–∫–µ–Ω–¥:** 100% ‚úÖ  \n**–§—Ä–æ–Ω—Ç–µ–Ω–¥ —Å—Ç—Ä–∞–Ω–∏—Ü—ã:** 100% ‚úÖ  \n**–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å:** 85% ‚úÖ  \n**–î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è:** 100% ‚úÖ  \n**–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ:** –¢—Ä–µ–±—É–µ—Ç—Å—è MySQL –¥–ª—è –ø–æ–ª–Ω–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è  \n**–î–µ–ø–ª–æ–π:** –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –≥–æ—Ç–æ–≤—ã ‚úÖ\n","size_bytes":3502},"QUICK_START.md":{"content":"# üöÄ –ë—ã—Å—Ç—Ä—ã–π —Å—Ç–∞—Ä—Ç - PsychPlatform (–ù–æ–≤–∞—è –≤–µ—Ä—Å–∏—è)\n\n## –ó–∞–ø—É—Å–∫ –∑–∞ 5 –º–∏–Ω—É—Ç\n\n### –®–∞–≥ 1: –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π\n\n```bash\n# –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –ø–∞–∫–µ—Ç—ã –¥–ª—è –Ω–æ–≤–æ–π –≤–µ—Ä—Å–∏–∏\nnpm install express express-session express-mysql-session mysql2 bcrypt\n```\n\n### –®–∞–≥ 2: –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö\n\n–í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤:\n\n#### –í–∞—Ä–∏–∞–Ω—Ç –ê: –õ–æ–∫–∞–ª—å–Ω–∞—è MySQL –±–∞–∑–∞ (–¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è)\n\n```bash\n# –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ MySQL –µ—Å–ª–∏ –µ—â—ë –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω\n# –°–æ–∑–¥–∞–π—Ç–µ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö\nmysql -u root -p\nCREATE DATABASE psychplatform;\nexit;\n\n# –°–æ–∑–¥–∞–π—Ç–µ .env —Ñ–∞–π–ª\ncp .env.example .env\n\n# –û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ .env —Å –≤–∞—à–∏–º–∏ –ª–æ–∫–∞–ª—å–Ω—ã–º–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏:\n# DB_HOST=localhost\n# DB_USER=root\n# DB_PASSWORD=–≤–∞—à_–ø–∞—Ä–æ–ª—å\n# DB_NAME=psychplatform\n```\n\n#### –í–∞—Ä–∏–∞–Ω—Ç –ë: –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —Ä–µ–≥.—Ä—É (–ø—Ä–æ–¥–∞–∫—à–µ–Ω)\n\n```bash\n# –°–æ–∑–¥–∞–π—Ç–µ .env —Ñ–∞–π–ª\ncp .env.example .env\n\n# –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∏–∑ —Å–∫—Ä–∏–Ω—à–æ—Ç–∞:\n# DB_HOST=–≤–∞—à_—Ö–æ—Å—Ç (–æ–±—ã—á–Ω–æ localhost –∏–ª–∏ IP)\n# DB_USER=u3105470_psyh_user\n# DB_PASSWORD=xR3iA0zO0qwV9cF4\n# DB_NAME=u3105470_psyh\n```\n\n### –®–∞–≥ 3: –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö\n\n```bash\n# –°–æ–∑–¥–∞–π—Ç–µ —Ç–∞–±–ª–∏—Ü—ã –∏ –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –¥–µ–º–æ-–¥–∞–Ω–Ω—ã–º–∏\ncd server\nnode seed.js\n```\n\n–í—ã –¥–æ–ª–∂–Ω—ã —É–≤–∏–¥–µ—Ç—å:\n```\n‚úì Successfully connected to MySQL database\n‚úì Database schema initialized\n‚úì Admin user created: admin@psychplatform.com\n...\n=== Database Seeding Completed Successfully! ===\n```\n\n### –®–∞–≥ 4: –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞\n\n```bash\n# –ò–∑ –∫–æ—Ä–Ω–µ–≤–æ–π –ø–∞–ø–∫–∏ –ø—Ä–æ–µ–∫—Ç–∞\nnode server/index.js\n```\n\n–ò–ª–∏ –∏—Å–ø–æ–ª—å–∑—É—è npm:\n```bash\n# –ü–µ—Ä–µ–∏–º–µ–Ω—É–π—Ç–µ package-new.json –≤ package.json\nmv package-new.json package.json\n\n# –ó–∞–ø—É—Å—Ç–∏—Ç–µ\nnpm start\n```\n\n–°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—Å—Ç–∏—Ç—Å—è –Ω–∞ `http://0.0.0.0:5000`\n\n### –®–∞–≥ 5: –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ\n\n–û—Ç–∫—Ä–æ–π—Ç–µ –±—Ä–∞—É–∑–µ—Ä –∏ –ø–µ—Ä–µ–π–¥–∏—Ç–µ –Ω–∞ `http://localhost:5000`\n\n**–î–µ–º–æ-–∞–∫–∫–∞—É–Ω—Ç—ã –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:**\n\n| –†–æ–ª—å | Email | –ü–∞—Ä–æ–ª—å |\n|------|-------|--------|\n| –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä | admin@psychplatform.com | admin123 |\n| –ü—Å–∏—Ö–æ–ª–æ–≥ | anna.petrova@psychplatform.com | psychologist123 |\n| –ü—Å–∏—Ö–æ–ª–æ–≥ | mikhail.sidorov@psychplatform.com | psychologist123 |\n| –ö–ª–∏–µ–Ω—Ç | maria.ivanova@example.com | client123 |\n\n## üß™ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–∞\n\n### –î–ª—è –∫–ª–∏–µ–Ω—Ç–∞:\n1. ‚úÖ –í–æ–π–¥–∏—Ç–µ –∫–∞–∫ –∫–ª–∏–µ–Ω—Ç\n2. ‚úÖ –ù–∞–π–¥–∏—Ç–µ –ø—Å–∏—Ö–æ–ª–æ–≥–∞ –Ω–∞ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ\n3. ‚úÖ –û—Ç–∫—Ä–æ–π—Ç–µ –ø—Ä–æ—Ñ–∏–ª—å –ø—Å–∏—Ö–æ–ª–æ–≥–∞\n4. ‚úÖ –ó–∞–ø–∏—à–∏—Ç–µ—Å—å –Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é\n5. ‚úÖ –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ä–∞–∑–¥–µ–ª \"–ú–æ–∏ –∑–∞–ø–∏—Å–∏\"\n\n### –î–ª—è –ø—Å–∏—Ö–æ–ª–æ–≥–∞:\n1. ‚úÖ –í–æ–π–¥–∏—Ç–µ –∫–∞–∫ –ø—Å–∏—Ö–æ–ª–æ–≥\n2. ‚úÖ –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∑–∞–ø–∏—Å–∏ –≤ –ª–∏—á–Ω–æ–º –∫–∞–±–∏–Ω–µ—Ç–µ\n3. ‚úÖ –û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ –ø—Ä–æ—Ñ–∏–ª—å\n4. ‚úÖ –ü–æ—Å–º–æ—Ç—Ä–∏—Ç–µ –æ—Ç–∑—ã–≤—ã (–µ—Å–ª–∏ –µ—Å—Ç—å)\n\n### –î–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞:\n1. ‚úÖ –í–æ–π–¥–∏—Ç–µ –∫–∞–∫ –∞–¥–º–∏–Ω\n2. ‚úÖ –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É\n3. ‚úÖ –û–¥–æ–±—Ä–∏—Ç–µ/–æ—Ç–∫–ª–æ–Ω–∏—Ç–µ –ø—Å–∏—Ö–æ–ª–æ–≥–∞ (–µ—Å–ª–∏ –µ—Å—Ç—å –Ω–∞ –º–æ–¥–µ—Ä–∞—Ü–∏–∏)\n4. ‚úÖ –ü–æ—Å–º–æ—Ç—Ä–∏—Ç–µ —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π\n\n## üîß –†–µ—à–µ–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º\n\n### –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–µ –ø–æ–¥–∫–ª—é—á–∞–µ—Ç—Å—è\n\n```bash\n# –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ MySQL –∑–∞–ø—É—â–µ–Ω\nsudo service mysql status\n\n# –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≤ .env\ncat .env\n\n# –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –≤—Ä—É—á–Ω—É—é\nmysql -u u3105470_psyh_user -p\n```\n\n### –û—à–∏–±–∫–∞ \"Cannot find module\"\n\n```bash\n# –ü–µ—Ä–µ—É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏\nrm -rf node_modules\nnpm install express express-session express-mysql-session mysql2 bcrypt\n```\n\n### –ü–æ—Ä—Ç 5000 —É–∂–µ –∑–∞–Ω—è—Ç\n\n```bash\n# –ò–∑–º–µ–Ω–∏—Ç–µ –ø–æ—Ä—Ç –≤ .env\necho \"PORT=3000\" >> .env\n\n# –ò–ª–∏ –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ —Å—Ç–∞—Ä–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ\n# (—Å—Ç–∞—Ä–æ–µ React –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –Ω–∞ –ø–æ—Ä—Ç—É 5000)\npkill -f \"tsx server/index.ts\"\n```\n\n### –¢–∞–±–ª–∏—Ü—ã –Ω–µ —Å–æ–∑–¥–∞—é—Ç—Å—è\n\n```bash\n# –°–æ–∑–¥–∞–π—Ç–µ —Ç–∞–±–ª–∏—Ü—ã –≤—Ä—É—á–Ω—É—é —á–µ—Ä–µ–∑ phpMyAdmin –∏–ª–∏ mysql\nmysql -u root -p psychplatform < server-new/schema.sql\n```\n\n## üìÅ –°—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ñ–∞–π–ª–æ–≤\n\n```\nproject/\n‚îú‚îÄ‚îÄ server-new/           # –ù–æ–≤—ã–π –±–µ–∫–µ–Ω–¥ (MySQL + JS)\n‚îÇ   ‚îú‚îÄ‚îÄ index.js         # –°–µ—Ä–≤–µ—Ä\n‚îÇ   ‚îú‚îÄ‚îÄ routes.js        # API endpoints\n‚îÇ   ‚îú‚îÄ‚îÄ storage.js       # Database layer\n‚îÇ   ‚îú‚îÄ‚îÄ db.js            # DB connection\n‚îÇ   ‚îú‚îÄ‚îÄ schema.sql       # Database schema\n‚îÇ   ‚îî‚îÄ‚îÄ seed.js          # Demo data\n‚îÇ\n‚îú‚îÄ‚îÄ public/              # –§—Ä–æ–Ω—Ç–µ–Ω–¥ (HTML/CSS/JS)\n‚îÇ   ‚îú‚îÄ‚îÄ css/styles.css\n‚îÇ   ‚îú‚îÄ‚îÄ js/\n‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ api.js\n‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ auth.js\n‚îÇ   ‚îú‚îÄ‚îÄ index.html\n‚îÇ   ‚îú‚îÄ‚îÄ login.html\n‚îÇ   ‚îú‚îÄ‚îÄ client-dashboard.html\n‚îÇ   ‚îú‚îÄ‚îÄ psychologist-dashboard.html\n‚îÇ   ‚îú‚îÄ‚îÄ admin-dashboard.html\n‚îÇ   ‚îú‚îÄ‚îÄ psychologist-profile.html\n‚îÇ   ‚îú‚îÄ‚îÄ edit-profile.html\n‚îÇ   ‚îú‚îÄ‚îÄ consultation.html\n‚îÇ   ‚îî‚îÄ‚îÄ leave-review.html\n‚îÇ\n‚îú‚îÄ‚îÄ .env                 # –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è (—Å–æ–∑–¥–∞—Ç—å)\n‚îú‚îÄ‚îÄ .env.example         # –ü—Ä–∏–º–µ—Ä –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏\n‚îú‚îÄ‚îÄ package-new.json     # –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –Ω–æ–≤–æ–π –≤–µ—Ä—Å–∏–∏\n‚îú‚îÄ‚îÄ README_NEW.md        # –ü–æ–ª–Ω–∞—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è\n‚îî‚îÄ‚îÄ DEPLOYMENT_REG_RU.md # –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ –¥–µ–ø–ª–æ—é\n```\n\n## üéØ –ß—Ç–æ –¥–∞–ª—å—à–µ?\n\n1. **–õ–æ–∫–∞–ª—å–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ**: –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ –≤—Å–µ —Ñ—É–Ω–∫—Ü–∏–∏\n2. **–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–æ–¥–∞–∫—à–µ–Ω–∞**: –°–ª–µ–¥—É–π—Ç–µ `DEPLOYMENT_REG_RU.md`\n3. **–ú–∏–≥—Ä–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö**: –ï—Å–ª–∏ –µ—Å—Ç—å –¥–∞–Ω–Ω—ã–µ –≤ —Å—Ç–∞—Ä–æ–π –ë–î, –º–∏–≥—Ä–∏—Ä—É–π—Ç–µ –∏—Ö\n4. **–ù–∞—Å—Ç—Ä–æ–π–∫–∞ HTTPS**: –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç\n5. **–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥**: –ù–∞—Å—Ç—Ä–æ–π—Ç–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥\n\n## üí° –ü–æ–ª–µ–∑–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã\n\n```bash\n# –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ª–æ–≥–∏\ntail -f /var/log/psychplatform.log\n\n# –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å —Å–µ—Ä–≤–µ—Ä\npm2 restart psychplatform\n\n# –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å –ë–î\nmysql -u root -p -e \"SHOW DATABASES;\"\n\n# –°–æ–∑–¥–∞—Ç—å –±—ç–∫–∞–ø –ë–î\nmysqldump -u root -p psychplatform > backup.sql\n\n# –í–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∏–∑ –±—ç–∫–∞–ø–∞\nmysql -u root -p psychplatform < backup.sql\n```\n\n## üìû –ü–æ–º–æ—â—å\n\n–ï—Å–ª–∏ —á—Ç–æ-—Ç–æ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç:\n1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ —Å–µ—Ä–≤–µ—Ä–∞\n2. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ë–î\n3. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—Å–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã\n4. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ .env —Ñ–∞–π–ª\n\n---\n\n**–£—Å–ø–µ—à–Ω–æ–≥–æ –∑–∞–ø—É—Å–∫–∞! üéâ**\n","size_bytes":7106},"server-new/seed.js":{"content":"// Seed database with demo data\nconst bcrypt = require('bcrypt');\nconst { MySQLStorage } = require('./storage');\nconst { testConnection, initDatabase } = require('./db');\n\nasync function seedDatabase() {\n  console.log('\\n=== Starting Database Seeding ===\\n');\n\n  // Test connection\n  const connected = await testConnection();\n  if (!connected) {\n    console.error('Cannot seed database - connection failed');\n    process.exit(1);\n  }\n\n  // Initialize database schema\n  await initDatabase();\n\n  const storage = new MySQLStorage();\n\n  try {\n    // Create admin user\n    console.log('Creating admin user...');\n    const adminUser = await storage.createUser({\n      email: 'admin@psychplatform.com',\n      password: await bcrypt.hash('admin123', 10),\n      role: 'admin',\n      firstName: '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä',\n      lastName: '–°–∏—Å—Ç–µ–º—ã',\n    });\n    console.log('‚úì Admin user created:', adminUser.email);\n\n    // Create sample psychologists\n    console.log('\\nCreating psychologist 1...');\n    const psychologist1User = await storage.createUser({\n      email: 'anna.petrova@psychplatform.com',\n      password: await bcrypt.hash('psychologist123', 10),\n      role: 'psychologist',\n      firstName: '–ê–Ω–Ω–∞',\n      lastName: '–ü–µ—Ç—Ä–æ–≤–∞',\n    });\n    console.log('‚úì Psychologist user created:', psychologist1User.email);\n\n    const psychologist1 = await storage.createPsychologist({\n      userId: psychologist1User.id,\n      specialization: '–°–µ–º–µ–π–Ω–∞—è —Ç–µ—Ä–∞–ø–∏—è',\n      experience: 8,\n      education: '–ú–ì–£, —Ñ–∞–∫—É–ª—å—Ç–µ—Ç –ø—Å–∏—Ö–æ–ª–æ–≥–∏–∏',\n      certifications: ['–°–µ–º–µ–π–Ω–∞—è —Ç–µ—Ä–∞–ø–∏—è', '–ö–æ–≥–Ω–∏—Ç–∏–≤–Ω–æ-–ø–æ–≤–µ–¥–µ–Ω—á–µ—Å–∫–∞—è —Ç–µ—Ä–∞–ø–∏—è'],\n      description: '–°–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä—É—é—Å—å –Ω–∞ —Å–µ–º–µ–π–Ω—ã—Ö –æ—Ç–Ω–æ—à–µ–Ω–∏—è—Ö, –∫–æ–Ω—Ñ–ª–∏–∫—Ç–∞—Ö –≤ –ø–∞—Ä–µ –∏ –¥–µ—Ç—Å–∫–æ-—Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–∏—Ö –æ—Ç–Ω–æ—à–µ–Ω–∏—è—Ö',\n      price: '2500.00',\n      formats: ['video', 'audio', 'chat'],\n    });\n    console.log('‚úì Psychologist profile created:', psychologist1.id);\n    \n    // Approve psychologist 1\n    await storage.approvePsychologist(psychologist1.id);\n    console.log('‚úì Psychologist 1 approved');\n\n    console.log('\\nCreating psychologist 2...');\n    const psychologist2User = await storage.createUser({\n      email: 'mikhail.sidorov@psychplatform.com',\n      password: await bcrypt.hash('psychologist123', 10),\n      role: 'psychologist',\n      firstName: '–ú–∏—Ö–∞–∏–ª',\n      lastName: '–°–∏–¥–æ—Ä–æ–≤',\n    });\n    console.log('‚úì Psychologist user created:', psychologist2User.email);\n\n    const psychologist2 = await storage.createPsychologist({\n      userId: psychologist2User.id,\n      specialization: '–ö–æ–≥–Ω–∏—Ç–∏–≤–Ω–æ-–ø–æ–≤–µ–¥–µ–Ω—á–µ—Å–∫–∞—è —Ç–µ—Ä–∞–ø–∏—è',\n      experience: 12,\n      education: '–°–ü–±–ì–£, –∫–ª–∏–Ω–∏—á–µ—Å–∫–∞—è –ø—Å–∏—Ö–æ–ª–æ–≥–∏—è',\n      certifications: ['–ö–ü–¢', '–†–∞–±–æ—Ç–∞ —Å —Ç—Ä–µ–≤–æ–∂–Ω—ã–º–∏ —Ä–∞—Å—Å—Ç—Ä–æ–π—Å—Ç–≤–∞–º–∏'],\n      description: '–†–∞–±–æ—Ç–∞—é —Å —Ç—Ä–µ–≤–æ–∂–Ω—ã–º–∏ —Ä–∞—Å—Å—Ç—Ä–æ–π—Å—Ç–≤–∞–º–∏, –¥–µ–ø—Ä–µ—Å—Å–∏–µ–π –∏ –ø–∞–Ω–∏—á–µ—Å–∫–∏–º–∏ –∞—Ç–∞–∫–∞–º–∏',\n      price: '3000.00',\n      formats: ['video', 'audio'],\n    });\n    console.log('‚úì Psychologist profile created:', psychologist2.id);\n\n    await storage.approvePsychologist(psychologist2.id);\n    console.log('‚úì Psychologist 2 approved');\n\n    // Create sample client\n    console.log('\\nCreating client user...');\n    const clientUser = await storage.createUser({\n      email: 'maria.ivanova@example.com',\n      password: await bcrypt.hash('client123', 10),\n      role: 'client',\n      firstName: '–ú–∞—Ä–∏—è',\n      lastName: '–ò–≤–∞–Ω–æ–≤–∞',\n    });\n    console.log('‚úì Client user created:', clientUser.email);\n\n    console.log('\\n=== Database Seeding Completed Successfully! ===\\n');\n    console.log('Demo accounts:');\n    console.log('Admin:        admin@psychplatform.com / admin123');\n    console.log('Psychologist: anna.petrova@psychplatform.com / psychologist123');\n    console.log('Psychologist: mikhail.sidorov@psychplatform.com / psychologist123');\n    console.log('Client:       maria.ivanova@example.com / client123');\n    console.log('');\n\n    process.exit(0);\n  } catch (error) {\n    console.error('\\n‚úó Error seeding database:', error);\n    process.exit(1);\n  }\n}\n\n// Run seeding\nseedDatabase();\n","size_bytes":4344},"server-new/db.js":{"content":"// MySQL Database Connection\nconst mysql = require('mysql2/promise');\n\n// Database configuration from environment variables\nconst dbConfig = {\n  host: process.env.DB_HOST || 'localhost',\n  user: process.env.DB_USER || 'u3105470_psyh_user',\n  password: process.env.DB_PASSWORD || 'xR3iA0zO0qwV9cF4',\n  database: process.env.DB_NAME || 'u3105470_psyh',\n  waitForConnections: true,\n  connectionLimit: 10,\n  queueLimit: 0,\n  charset: 'utf8mb4'\n};\n\n// Create connection pool\nconst pool = mysql.createPool(dbConfig);\n\n// Test connection\nasync function testConnection() {\n  try {\n    const connection = await pool.getConnection();\n    console.log('‚úì Successfully connected to MySQL database');\n    connection.release();\n    return true;\n  } catch (error) {\n    console.error('‚úó Failed to connect to MySQL database:', error.message);\n    return false;\n  }\n}\n\n// Initialize database (create tables if they don't exist)\nasync function initDatabase() {\n  try {\n    const fs = require('fs');\n    const path = require('path');\n    \n    // Read and execute schema SQL\n    const schemaPath = path.join(__dirname, 'schema.sql');\n    if (fs.existsSync(schemaPath)) {\n      const schema = fs.readFileSync(schemaPath, 'utf8');\n      const statements = schema\n        .split(';')\n        .map(s => s.trim())\n        .filter(s => s.length > 0 && !s.startsWith('--'));\n      \n      for (const statement of statements) {\n        await pool.query(statement);\n      }\n      \n      console.log('‚úì Database schema initialized');\n    }\n  } catch (error) {\n    console.error('‚úó Failed to initialize database:', error.message);\n    throw error;\n  }\n}\n\n// Execute query helper\nasync function query(sql, params = []) {\n  try {\n    const [rows] = await pool.execute(sql, params);\n    return rows;\n  } catch (error) {\n    console.error('Database query error:', error.message);\n    throw error;\n  }\n}\n\n// Get single row\nasync function queryOne(sql, params = []) {\n  const rows = await query(sql, params);\n  return rows[0] || null;\n}\n\nmodule.exports = {\n  pool,\n  query,\n  queryOne,\n  testConnection,\n  initDatabase\n};\n","size_bytes":2091},"TECH_STACK_COMPARISON.md":{"content":"# –°—Ä–∞–≤–Ω–µ–Ω–∏–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—á–µ—Å–∫–∏—Ö —Å—Ç–µ–∫–æ–≤\n\n## üîÑ –°—Ç–∞—Ä–∞—è –≤–µ—Ä—Å–∏—è vs –ù–æ–≤–∞—è –≤–µ—Ä—Å–∏—è\n\n### –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö\n\n| –°—Ç–∞—Ä–∞—è –≤–µ—Ä—Å–∏—è | –ù–æ–≤–∞—è –≤–µ—Ä—Å–∏—è |\n|---------------|--------------|\n| PostgreSQL (Neon) | **MySQL** |\n| Drizzle ORM | **mysql2** (—á–∏—Å—Ç—ã–π –¥—Ä–∞–π–≤–µ—Ä) |\n| –í –ø–∞–º—è—Ç–∏ –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ | MySQL –¥–ª—è –ø—Ä–æ–¥–∞–∫—à–µ–Ω–∞ |\n\n**–ü–æ—á–µ–º—É –∏–∑–º–µ–Ω–∏–ª–∏:**\n- –¢—Ä–µ–±–æ–≤–∞–Ω–∏–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å MySQL —Å phpMyAdmin –Ω–∞ —Ä–µ–≥.—Ä—É\n- –£–ø—Ä–æ—â–µ–Ω–∏–µ —Å—Ç–µ–∫–∞ (–±–µ–∑ ORM)\n- –ü—Ä—è–º–æ–π –¥–æ—Å—Ç—É–ø –∫ SQL –∑–∞–ø—Ä–æ—Å–∞–º\n\n### –ë–µ–∫–µ–Ω–¥\n\n| –°—Ç–∞—Ä–∞—è –≤–µ—Ä—Å–∏—è | –ù–æ–≤–∞—è –≤–µ—Ä—Å–∏—è |\n|---------------|--------------|\n| TypeScript | **JavaScript (ES modules)** |\n| Express.js | **Express.js** ‚úÖ |\n| Drizzle ORM | –ö–∞—Å—Ç–æ–º–Ω—ã–π Storage layer |\n| PostgreSQL session storage | **MySQL session storage** |\n| –ö–æ–º–ø–∏–ª—è—Ü–∏—è (tsx) | –ü—Ä—è–º–æ–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ (node) |\n\n**–ß—Ç–æ —Å–æ—Ö—Ä–∞–Ω–∏–ª–æ—Å—å:**\n- ‚úÖ Express.js\n- ‚úÖ –í—Å–µ API endpoints\n- ‚úÖ –°—Ç—Ä—É–∫—Ç—É—Ä–∞ routes\n- ‚úÖ Middleware (auth, error handling)\n- ‚úÖ bcrypt –¥–ª—è –ø–∞—Ä–æ–ª–µ–π\n- ‚úÖ express-session\n\n**–ß—Ç–æ –∏–∑–º–µ–Ω–∏–ª–æ—Å—å:**\n- TypeScript ‚Üí JavaScript\n- Drizzle ‚Üí mysql2\n- –¢–∏–ø—ã ‚Üí –ë–µ–∑ —Ç–∏–ø–æ–≤ (–∏–ª–∏ JSDoc –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏)\n\n### –§—Ä–æ–Ω—Ç–µ–Ω–¥\n\n| –°—Ç–∞—Ä–∞—è –≤–µ—Ä—Å–∏—è | –ù–æ–≤–∞—è –≤–µ—Ä—Å–∏—è |\n|---------------|--------------|\n| React 18 | **Vanilla HTML/CSS/JS** |\n| TypeScript | **JavaScript** |\n| Vite (—Å–±–æ—Ä–∫–∞) | **–ë–µ–∑ —Å–±–æ—Ä–∫–∏** (—Å—Ç–∞—Ç–∏–∫–∞) |\n| React Router (wouter) | **Multi-page** (–æ—Ç–¥–µ–ª—å–Ω—ã–µ HTML) |\n| TanStack Query | **Fetch API** |\n| shadcn/ui + Radix UI | **–ö–∞—Å—Ç–æ–º–Ω—ã–µ CSS –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã** |\n| Tailwind CSS | **–ö–∞—Å—Ç–æ–º–Ω–∞—è CSS –¥–∏–∑–∞–π–Ω-—Å–∏—Å—Ç–µ–º–∞** |\n| JSX –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã | **HTML —Å—Ç—Ä–∞–Ω–∏—Ü—ã** |\n\n**–ü–æ—á–µ–º—É –∏–∑–º–µ–Ω–∏–ª–∏:**\n- –¢—Ä–µ–±–æ–≤–∞–Ω–∏–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —á–∏—Å—Ç—ã–π HTML/CSS/JS\n- –£–ø—Ä–æ—â–µ–Ω–∏–µ –¥–ª—è –¥–µ–ø–ª–æ—è –Ω–∞ –ø—Ä–æ—Å—Ç–æ–º —Ö–æ—Å—Ç–∏–Ω–≥–µ\n- –ù–µ –Ω—É–∂–µ–Ω Node.js –¥–ª—è —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞\n- –ü—Ä–æ—â–µ –¥–ª—è –Ω–∞—á–∏–Ω–∞—é—â–∏—Ö —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤\n\n### –°—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ñ–∞–π–ª–æ–≤\n\n#### –°—Ç–∞—Ä–∞—è –≤–µ—Ä—Å–∏—è:\n```\nproject/\n‚îú‚îÄ‚îÄ server/\n‚îÇ   ‚îú‚îÄ‚îÄ index.ts\n‚îÇ   ‚îú‚îÄ‚îÄ routes.ts\n‚îÇ   ‚îú‚îÄ‚îÄ storage.ts\n‚îÇ   ‚îî‚îÄ‚îÄ ...\n‚îú‚îÄ‚îÄ client/src/\n‚îÇ   ‚îú‚îÄ‚îÄ App.tsx\n‚îÇ   ‚îú‚îÄ‚îÄ pages/\n‚îÇ   ‚îú‚îÄ‚îÄ components/\n‚îÇ   ‚îî‚îÄ‚îÄ lib/\n‚îú‚îÄ‚îÄ shared/\n‚îÇ   ‚îî‚îÄ‚îÄ schema.ts\n‚îî‚îÄ‚îÄ package.json\n```\n\n#### –ù–æ–≤–∞—è –≤–µ—Ä—Å–∏—è:\n```\nproject/\n‚îú‚îÄ‚îÄ server-new/\n‚îÇ   ‚îú‚îÄ‚îÄ index.js\n‚îÇ   ‚îú‚îÄ‚îÄ routes.js\n‚îÇ   ‚îú‚îÄ‚îÄ storage.js\n‚îÇ   ‚îú‚îÄ‚îÄ db.js\n‚îÇ   ‚îú‚îÄ‚îÄ schema.sql\n‚îÇ   ‚îî‚îÄ‚îÄ seed.js\n‚îú‚îÄ‚îÄ public/\n‚îÇ   ‚îú‚îÄ‚îÄ css/styles.css\n‚îÇ   ‚îú‚îÄ‚îÄ js/api.js\n‚îÇ   ‚îú‚îÄ‚îÄ js/auth.js\n‚îÇ   ‚îú‚îÄ‚îÄ index.html\n‚îÇ   ‚îú‚îÄ‚îÄ login.html\n‚îÇ   ‚îî‚îÄ‚îÄ ... (–¥—Ä—É–≥–∏–µ HTML)\n‚îî‚îÄ‚îÄ package-new.json\n```\n\n### –ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏\n\n| –°—Ç–∞—Ä–∞—è –≤–µ—Ä—Å–∏—è | –ù–æ–≤–∞—è –≤–µ—Ä—Å–∏—è |\n|---------------|--------------|\n| Vite | **Node.js express.static** |\n| TypeScript compiler | **–ù–µ—Ç –∫–æ–º–ø–∏–ª—è—Ü–∏–∏** |\n| Drizzle Kit (–º–∏–≥—Ä–∞—Ü–∏–∏) | **SQL —Å–∫—Ä–∏–ø—Ç—ã** |\n| React DevTools | **Browser DevTools** |\n| Hot Module Replacement | **–ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã** |\n\n### –î–µ–ø–ª–æ–π\n\n| –°—Ç–∞—Ä–∞—è –≤–µ—Ä—Å–∏—è | –ù–æ–≤–∞—è –≤–µ—Ä—Å–∏—è |\n|---------------|--------------|\n| Vercel / Netlify | **—Ä–µ–≥.—Ä—É** (shared hosting) |\n| Neon PostgreSQL | **MySQL –Ω–∞ —Ä–µ–≥.—Ä—É** |\n| Auto deploy –Ω–∞ push | **FTP –∑–∞–≥—Ä—É–∑–∫–∞** |\n| Environment variables | **.env —Ñ–∞–π–ª** |\n| HTTPS –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ | **SSL —á–µ—Ä–µ–∑ –ø–∞–Ω–µ–ª—å —Ä–µ–≥.—Ä—É** |\n\n### –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ (npm packages)\n\n#### –°—Ç–∞—Ä–∞—è –≤–µ—Ä—Å–∏—è (~50 –ø–∞–∫–µ—Ç–æ–≤):\n```json\n{\n  \"dependencies\": {\n    \"react\": \"^18.x\",\n    \"react-dom\": \"^18.x\",\n    \"@tanstack/react-query\": \"^5.x\",\n    \"wouter\": \"^3.x\",\n    \"drizzle-orm\": \"^0.x\",\n    \"@radix-ui/*\": \"–º–Ω–æ–∂–µ—Å—Ç–≤–æ –ø–∞–∫–µ—Ç–æ–≤\",\n    \"tailwindcss\": \"^3.x\",\n    \"typescript\": \"^5.x\",\n    \"vite\": \"^5.x\",\n    // ... –µ—â–µ ~40 –ø–∞–∫–µ—Ç–æ–≤\n  }\n}\n```\n\n#### –ù–æ–≤–∞—è –≤–µ—Ä—Å–∏—è (5 –ø–∞–∫–µ—Ç–æ–≤):\n```json\n{\n  \"dependencies\": {\n    \"express\": \"^4.18.2\",\n    \"express-session\": \"^1.17.3\",\n    \"express-mysql-session\": \"^3.0.0\",\n    \"mysql2\": \"^3.6.5\",\n    \"bcrypt\": \"^5.1.1\"\n  }\n}\n```\n\n**–ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞:**\n- ‚úÖ –í 10 —Ä–∞–∑ –º–µ–Ω—å—à–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π\n- ‚úÖ –ë—ã—Å—Ç—Ä–µ–µ npm install\n- ‚úÖ –ú–µ–Ω—å—à–µ —É—è–∑–≤–∏–º–æ—Å—Ç–µ–π\n- ‚úÖ –ü—Ä–æ—â–µ –ø–æ–¥–¥–µ—Ä–∂–∫–∞\n\n### –†–∞–∑–º–µ—Ä –ø—Ä–æ–µ–∫—Ç–∞\n\n| –ú–µ—Ç—Ä–∏–∫–∞ | –°—Ç–∞—Ä–∞—è –≤–µ—Ä—Å–∏—è | –ù–æ–≤–∞—è –≤–µ—Ä—Å–∏—è |\n|---------|---------------|--------------|\n| node_modules | ~500 MB | ~50 MB |\n| –ò—Å—Ö–æ–¥–Ω—ã–π –∫–æ–¥ | ~100+ —Ñ–∞–π–ª–æ–≤ | ~20 —Ñ–∞–π–ª–æ–≤ |\n| –§—Ä–æ–Ω—Ç–µ–Ω–¥ –±–∞–Ω–¥–ª | ~500 KB (–ø–æ—Å–ª–µ —Å–±–æ—Ä–∫–∏) | –ù–µ—Ç –±–∞–Ω–¥–ª–∞ (–ø—Ä—è–º—ã–µ —Ñ–∞–π–ª—ã) |\n| –í—Ä–µ–º—è —Å–±–æ—Ä–∫–∏ | ~10-30 —Å–µ–∫ | 0 —Å–µ–∫ (–Ω–µ—Ç —Å–±–æ—Ä–∫–∏) |\n\n### –ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å\n\n| –ê—Å–ø–µ–∫—Ç | –°—Ç–∞—Ä–∞—è –≤–µ—Ä—Å–∏—è | –ù–æ–≤–∞—è –≤–µ—Ä—Å–∏—è |\n|--------|---------------|--------------|\n| –í—Ä–µ–º—è –∑–∞–≥—Ä—É–∑–∫–∏ | React + –º–Ω–æ–≥–æ JS | –ë—ã—Å—Ç—Ä–µ–µ (–º–µ–Ω—å—à–µ JS) |\n| –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å | –û—á–µ–Ω—å –±—ã—Å—Ç—Ä–∞—è (SPA) | –ú–µ–¥–ª–µ–Ω–Ω–µ–µ (–ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü) |\n| SEO | –¢—Ä–µ–±—É–µ—Ç SSR | ‚úÖ –û—Ç–ª–∏—á–Ω–æ (HTML –∏–∑ –∫–æ—Ä–æ–±–∫–∏) |\n| –î–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å | –ó–∞–≤–∏—Å–∏—Ç –æ—Ç React | ‚úÖ –ù–∞—Ç–∏–≤–Ω—ã–π HTML |\n\n### –£–¥–æ–±—Å—Ç–≤–æ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏\n\n| –ê—Å–ø–µ–∫—Ç | –°—Ç–∞—Ä–∞—è –≤–µ—Ä—Å–∏—è | –ù–æ–≤–∞—è –≤–µ—Ä—Å–∏—è |\n|--------|---------------|--------------|\n| TypeScript | ‚úÖ –¢–∏–ø–æ–±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å | ‚ùå –ù–µ—Ç —Ç–∏–ø–æ–≤ |\n| Hot Reload | ‚úÖ –ú–≥–Ω–æ–≤–µ–Ω–Ω–æ | ‚ùå –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ |\n| –ö–æ–º–ø–æ–Ω–µ–Ω—Ç—ã | ‚úÖ –ü–µ—Ä–µ–∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ | ‚ö†Ô∏è –ö–æ–ø–∏–ø–∞—Å—Ç–∞ HTML |\n| Ecosystem | ‚úÖ –û–≥—Ä–æ–º–Ω—ã–π | ‚ö†Ô∏è –û–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω—ã–π |\n| –ö—Ä–∏–≤–∞—è –æ–±—É—á–µ–Ω–∏—è | ‚ö†Ô∏è –ö—Ä—É—Ç–∞—è | ‚úÖ –ü—Ä–æ—Å—Ç–∞—è |\n\n## üéØ –ö–æ–≥–¥–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–∞–∫—É—é –≤–µ—Ä—Å–∏—é?\n\n### –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –°–¢–ê–†–£–Æ –≤–µ—Ä—Å–∏—é (React + PostgreSQL):\n- ‚úÖ –°–ª–æ–∂–Ω–æ–µ SPA –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ\n- ‚úÖ –ù—É–∂–Ω–∞ —Ç–∏–ø–æ–±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å\n- ‚úÖ –ö–æ–º–∞–Ω–¥–∞ –∑–Ω–∞–µ—Ç React\n- ‚úÖ –î–µ–ø–ª–æ–π –Ω–∞ Vercel/Netlify\n- ‚úÖ –ù—É–∂–µ–Ω –æ—Ç–ª–∏—á–Ω—ã–π UX\n\n### –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –ù–û–í–£–Æ –≤–µ—Ä—Å–∏—é (Vanilla + MySQL):\n- ‚úÖ –ü—Ä–æ—Å—Ç–æ–π —Å–∞–π—Ç —Å –Ω–µ—Å–∫–æ–ª—å–∫–∏–º–∏ —Å—Ç—Ä–∞–Ω–∏—Ü–∞–º–∏\n- ‚úÖ –î–µ–ø–ª–æ–π –Ω–∞ –ø—Ä–æ—Å—Ç–æ–º shared —Ö–æ—Å—Ç–∏–Ω–≥–µ\n- ‚úÖ –ï—Å—Ç—å MySQL –±–∞–∑–∞\n- ‚úÖ –ù—É–∂–Ω–∞ –ø—Ä–æ—Å—Ç–æ—Ç–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∏\n- ‚úÖ –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏\n- ‚úÖ –í–∞–∂–µ–Ω SEO\n\n## üìä –í—ã–≤–æ–¥\n\n–ù–æ–≤–∞—è –≤–µ—Ä—Å–∏—è **–ø—Ä–æ—â–µ**, **–ª–µ–≥—á–µ** –∏ **–¥–µ—à–µ–≤–ª–µ** –≤ –ø–æ–¥–¥–µ—Ä–∂–∫–µ, –Ω–æ —Ç–µ—Ä—è–µ—Ç –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ React —Å—Ç–µ–∫–∞. \n\n–í—ã–±–æ—Ä –∑–∞–≤–∏—Å–∏—Ç –æ—Ç:\n- –¢—Ä–µ–±–æ–≤–∞–Ω–∏–π –∫ —Ö–æ—Å—Ç–∏–Ω–≥—É\n- –ù–∞–≤—ã–∫–æ–≤ –∫–æ–º–∞–Ω–¥—ã\n- –°–ª–æ–∂–Ω–æ—Å—Ç–∏ –ø—Ä–æ–µ–∫—Ç–∞\n- –ë—é–¥–∂–µ—Ç–∞\n\n–î–ª—è –¥–∞–Ω–Ω–æ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞ –Ω–æ–≤–∞—è –≤–µ—Ä—Å–∏—è –∏–¥–µ–∞–ª—å–Ω–æ –ø–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π –¥–µ–ø–ª–æ—è –Ω–∞ **—Ä–µ–≥.—Ä—É —Å MySQL**! üöÄ\n","size_bytes":7576}},"version":2}